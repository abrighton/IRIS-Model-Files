subsystem = IRIS
component = rotator-assembly

description = "Instrument Rotator Commands."

receive = [
    {
        name = move
        description = """Move to target rotation in FCRS<sub>IRIS</sub> coordinates and stop.

This is a low-level command to set specific rotator positions during debugging or daytime calibration. Under normal operations the rotator will be commanded by a continuous stream from the TCS.

IRIS has an integrated cable wrap hanging below the instrument that must follow the rotator, giving rise to the indicated rotator range. It is the responsibility of higher-level software subsystems to be aware of windup issues and command the rotator to the appropriate position within this range.

The rotator must be datumed, otherwise this command will fail.

*Discrete Command.*

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = true
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>

"""
        requiredArgs = [rotation]
        args = [
            {
                name = rotation
                description = "Rotation angle (degrees)"
                type = double
                minimum = -270
                maximum = 270
            }
        ]
    }
    {
        name = follow
        description = """Activate rotator position following.

When the follow attribute is enabled, the rotator will track the rotator angle published by the TCS in FCRS<sub>IRIS</sub>.

When the rtcOffset attribute is enabled, a continuously-varying angular error stream published by the NRTC (inst, based on OIWFS measurements) is added to the commanded rotator angle. Note that inst is provided in FCRS<sub>174.5</sub> coordinates, and is converted into FCRS<sub>IRIS</sub> coordinates internally prior to being applied.

The rotator must be datumed, otherwise this command will fail.

*Discrete Command.*

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = CONTINUOUS
</ul>

"""
        requiredArgs = [isFollowing]
        args = [
            {
                name = follow
                description = "Follow TCS if true."
                type = boolean
            }
            {
                name = rtcOffset
                description = "Apply RTC offsets if true."
                type = boolean
            }
        ]
    }
]
