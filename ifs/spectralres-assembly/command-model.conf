subsystem = IRIS
component = ifs-spectralres-assembly

description = """
Commands which can be accepted by IRIS Spectral Resolution Assembly.
"""

receive = [
    {
        name = GRATING_INIT
        description = """
This command causes the functional group to initialize its variables, read configuration, and verify dependencies.  It prepares this functional group internally such that it is available to communicate with outside processes and begin managing the grating turret.  It does not cause any movement or initiate any action on the hardware but, it may validate connections and hardware presence before completing.  It may also initialize per-axis configuration of the underlying Galil HCD.

This command can be invoked only when the grating turret is not in motion. All commands will be rejected during the initialization.

Initialization can fail for various reasons including invalid configurations.  In this case, the command state will report the error.

Command type: request
"""
    }
    {
        name = GRATING_DATUM
        description = """
Perform homing of mechanisms, if necessary.

This command can be invoked only when the grating turret is not in motion. All commands except “stop” will be rejected during the datum.

In the event of an error or failure to index, datum will return an error response, the command state will be set to error, and the movement state will be unindexed and the position will be reported as unknown.
"""
    }
    {
        name = GRATING_LOCK
        description = """
This command locks this functional group. The commands that trigger any motion will be rejected when locked.

This command is expected to be called before starting the cool-down or warm-up procedure.

Command type: request
"""
    }
    {
        name = GRATING_UNLOCK
        description = """
This command locks this functional group. The commands that trigger any motion will be rejected when locked.

This command is expected to be called before starting the cool-down or warm-up procedure.

Command type: request
"""
    }
    {
        name = GRATING_PARK
        description = """
This command moves the grating turret to the most commonly used position before long sleep of the instrument so that the first observation after wake-up can be started quickly (TBC).
"""
    }
    {
        name = GRATING_SELECT
        description = """
This command changes the grating of IFS. Depends on the chosen grating groove density, grating mechanism will rotate accordingly.

This command can be invoked only when the grating turret is not in motion.

The list of groove densities are as written on [IRIS Preliminary Design Description v1.0(TMT.INS.TEC.16.051.DRF01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-56853/IRIS%20Preliminary%20Design%20Description%20v1.0.docx).
"""
        args = [
            {
                name = spectralresolution
                description = "Desired grating groove density for IFS observation. Unit is grooves/mm"
                enum = [4000-Z, 4000-Y, 4000-J, 4000-H, 4000-K, "4000-H+K", 8000-Z, 8000-Y, 8000-J, 8000-H, 8000-Kn1-3, 8000-Kn4-5, 8000-Kbb, 10000-Z, 10000-Y, 10000-J, 10000-H, 1000-K, Mirror]
            }
        ]
    }
    {
        name = GRATING_STOP
        description = """
This command stops the motion of all mechanisms in the grating turret.

Command type: submit
"""
    }
    {
        name = GRATING_DEBUG
        description = """
This will set the current debug level.  This is for debugging purposes and allows the user to change the level of logging for debugging purposes.

Command type: request
"""
    }
    {
        name = GRATING_TEST
        description = """
This command executes a self-test.  Actual action to be taken is TBD.

This command never drives any mechanisms.

This command can be invoked only when the grating turret is not in motion. All commands will be rejected during the test.

Command type: request
"""
    }
    {
        name = LENSLETMASK_INIT
        description = """
This command causes the functional group to initialize its variables, read configuration, and verify dependencies.  It prepares this functional group internally such that it is available to communicate with outside processes and begin managing the mechanisms in this functional group.  It does not cause any movement or initiate any action on the hardware but, it may validate connections and hardware presence before completing.  It may also initialize per-axis configuration of the underlying Galil HCD.

This command can be invoked only when none of the mechanisms in this functional group is in motion. All commands will be rejected during the initialization.

Initialization can fail for various reasons including invalid configurations.  In this case, the command state will report the error.

Command type: request
"""
    }
    {
        name = LENSLETMASK_DATUM
        description = """
Perform homing of mechanisms, if necessary.

This command can be invoked only when none of the mechanisms in this functional group is in motion. All commands except “stop” will be rejected during the datu

In the event of an error or failure to index, datum will return an error response, the command state will be set to error, and the movement state will be unindexed and the position will be reported as unknown.

Command type: submit
"""
    }
    {
        name = LENSLETMASK_PARK
        description = """
This command moves the mechanisms to the most commonly used position before long sleep of the instrument so that the first observation after wake-up can be started quickly (TBC).

Command type: submit
"""
    }
    {
        name = LENSLETMASK_DEBUG
        description = """
This will set the current debug level.  This is for debugging purposes and allows the user to change the level of logging for debugging purposes.

Command type: request
"""
    }
    {
        name = LENSLETMASK_STOP
        description = """
Stop the motion of all mechanisms in this functional group.

Command type: submit
"""
    }
    {
        name = LENSLETMASK_TEST
        description = """
This command executes a self-test.  Actual action to be taken is TBD.

This command never drives any mechanisms.

This command can be invoked only when none of the mechanisms in this functional group is in motion. All commands will be rejected during the test.

Command type: request
"""
    }
    {
        name = LENSLETMASK_LOCK
        description = """
This command locks this functional group. The commands that trigger any motion will be rejected when locked.

This command is expected to be called before starting the cool-down or warm-up procedure.

Command type: request
"""
    }
    {
        name = LENSLETMASK_UNLOCK
        description = """
This command locks this functional group. The commands that trigger any motion will be rejected when locked.

This command is expected to be called before starting the cool-down or warm-up procedure.

Command type: request
"""
    }
    {
        name = LENSLETMASK_SELECT
        description = """
This command moves the lenslet mask to the specified discrete position.                                                                                                       
This command can be invoked only when none of the mechanisms in this functional group is in motion.

__TODO__: Define an argument that determines which lenslet column to be masked or unmasked.

Command type: submit
"""
        requiredArgs = [position]
        args = [
            {
                name = position
                description = """Desired position of the lenslet mask."""
                enum = [FULL_OPEN, SERRATED_WIDE, FINE_MASK, FINE_MASK_CALIBRATION]
            }
        ]
    }
    {
        name = SLICERMASK_INIT
        description = """
This command causes the functional group to initialize its variables, read configuration, and verify dependencies.  It prepares this functional group internally such that it is available to communicate with outside processes and begin managing the mechanisms in this functional group.  It does not cause any movement or initiate any action on the hardware but, it may validate connections and hardware presence before completing.  It may also initialize per-axis configuration of the underlying Galil HCD.

This command can be invoked only when none of the mechanisms in this functional group is in motion. All commands will be rejected during the initialization.

Initialization can fail for various reasons including invalid configurations.  In this case, the command state will report the error.

Command type: request
"""
    }
    {
        name = SLICERMASK_DATUM
        description = """
Perform homing of mechanisms, if necessary.

This command can be invoked only when none of the mechanisms in this functional group is in motion. All commands except “stop” will be rejected during the datu

In the event of an error or failure to index, datum will return an error response, the command state will be set to error, and the movement state will be unindexed and the position will be reported as unknown.

Command type: submit
"""
    }
    {
        name = SLICERMASK_PARK
        description = """
This command moves the mechanisms to the most commonly used position before long sleep of the instrument so that the first observation after wake-up can be started quickly (TBC).

Command type: submit
"""
    }
    {
        name = SLICERMASK_DEBUG
        description = """
This will set the current debug level.  This is for debugging purposes and allows the user to change the level of logging for debugging purposes.

Command type: request
"""
    }
    {
        name = SLICERMASK_STOP
        description = """
Stop the motion of all mechanisms in this functional group.

Command type: submit
"""
    }
    {
        name = SLICERMASK_TEST
        description = """
This command executes a self-test.  Actual action to be taken is TBD.

This command never drives any mechanisms.

This command can be invoked only when none of the mechanisms in this functional group is in motion. All commands will be rejected during the test.

Command type: request
"""
    }
    {
        name = SLICERMASK_LOCK
        description = """
This command locks this functional group. The commands that trigger any motion will be rejected when locked.

This command is expected to be called before starting the cool-down or warm-up procedure.

Command type: request
"""
    }
    {
        name = SLICERMASK_UNLOCK
        description = """
This command locks this functional group. The commands that trigger any motion will be rejected when locked.

This command is expected to be called before starting the cool-down or warm-up procedure.

Command type: request
"""
    }
    {
        name = SLICERMASK_SELECT
        description = """
This command moves the slicer mask to the specified discrete position.

__TODO__: Define the discrete positions

Command type: submit
"""
        requiredArgs = [position]
        args = [
            {
                name = position
                description = """Desired position of the lenslet mask."""
                enum = [FULL_OPEN, HALF]
            }
        ]
    }
    {
        name = SHUTDOWN
        description = """
Stop this assembly running. This will cause all of the software to exit. It does not send this command down to the underlying HCDs. If currently shutting down, all other commands will be rejected.

Command type: request
"""
    }
]
