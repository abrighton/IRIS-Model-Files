subsystem = IRIS
component = sci-adc-assembly

publish {

  description = """
Telemetries published by IRIS Science Path ADC Assembly.

__TODO__: Add configuration of the dispersion model.

__TODO__: Add configuration of the image shift model.
"""


  telemetry = [
     {
        name = odgwShift
        description = """
        IRIS publishes the expected ADC image shifts of the (up to 4) IRIS ODGW position demands

        *Discussion: The ADC will shift an image position in a manner that depends upon the current state of the ADC. The estimated image shift (inferred from optical models) is sent from IRIS to the TCS so that the TCS can adjust the IRIS ODGW position demands accordingly. The reference wavelength used to calculate the shift is tcs.cm.iris.imgCurAtmDispersion.referenceWavelength.*
        """
        maxRate = 1
        archive = true
        archiveRate = 1
        attributes = [
            {
                name = odgw1Shift
                description  = "2 element array holding x, y values (range TBD) in the FCRS<sub>IRIS-ROT</sub>, evaluated at the reference wavelength"
                type = array
                dimensions: [2]
                items = {
                    type = double
                    units = mm
                }
            }
            {
                name = odgw2Shift
                description  = "2 element array holding x, y values (range TBD) in the FCRS<sub>IRIS-ROT</sub>, evaluated at the reference wavelength"
                type = array
                dimensions: [2]
                items = {
                    type = double
                    units = mm
                }
            }
            {
                name = odgw3Shift
                description  = "2 element array holding x, y values (range TBD) in the FCRS<sub>IRIS-ROT</sub>, evaluated at the reference wavelength"
                type = array
                dimensions: [2]
                items = {
                    type = double
                    units = mm
                }
            }
            {
                name = odgw4Shift
                description  = "2 element array holding x, y values (range TBD) in the FCRS<sub>IRIS-ROT</sub>, evaluated at the reference wavelength"
                type = array
                dimensions: [2]
                items = {
                    type = double
                    units = mm
                }
            }
        ]
	}
    {
      name = RETRACT_state
      description = "Standard assembly state as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = cmd
            description  = "command state"
            enum = [UNINITIALIZED, READY, BUSY, COTINUOUS]
        }
        {
            name = move
            description  = "state of mechanisms that can move"
            enum = [UNINDEXED, INDEXING, INDEXED, MOVING]
        }
        {
            name = onTarget
            description  = "state of mechanisms with respect to requested target position / configuration"
            type = boolean
        }
        {
            name = debug
            description  = "debug level"
            enum = [TBD]
        }
      ]
    }
    {
      name = RETRACT_cmdState
      description = "Standard assembly command status as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = command
            description  = "Name of the most recent command."
            type = string
        }
        {
            name = args
            description  = "String representation of the command arguments."
            type = string
        }
        {
            name = caller
            description  = "String identifying the caller (if available)"
            type = string
        }
        {
            name = runID
            description  = "A run ID associated with the command."
            type = integer
        }
        {
            name = ack
            description  = "Initial acknowledgement"
            enum = [ACCEPTED, REJECTED]
        }
        {
            name = ackMsg
            description  = "Acknowledgement string explaining why a command is REJECTED. This string will generally be cleared if the command is ACCEPTED."
            type = string
        }
        {
            name = completion
            description  = "Status of completion"
            enum = [INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED]
        }
        {
            name = completionMsg
            description  = "The message string is cleared when a command has been successfully acknowledged and/or is INPROGRESS. The message string is filled in if the command fails."
            type = string
        }
      ]
    }
    {
      name = RETRACT_position
      description = "Current position of the linear stage."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
          name = position
          description = """
Summary of the linear stage.

* __IN__     : ADC is inserted in the science light path and ready for observation using ADC.
* __HALFWAY__: Some motion is on-going, or ADC is not in either the inserted position or the retracted position.
* __OUT__    : ADC is completely retracted from the sicence light path and ready for the observation which does not use ADC.
* __UNKNOWN__: Unknown state.
"""
	  enum = [IN, HALFWAY, OUT, UNKNOWN]
        }
      ]
    }
    {
      name = RETRACT_stageConf
      description = """
Current configuration of the linear stage.

This telemetry can be used to check if the current configuration is as intended. If not, the user shoud edit the configuration via Configuration Service or a local file, and re-initialize this assembly so that the latest configuration will be reloaded. This telemetry is updated only when initialization is performed.
"""
      maxRate = 1
      archive = true
      attributes = [
        {
          name = insertedPosition
          description = """
Inserted position from the home position.

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = insertedPositionDelta
          description = """
Acceptable positioning deviation at the inserted position.

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = retractedPosition
          description = """
Retracted position from the home position

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = retractedPositionDelta
          description = """
Acceptable positioning deviation at the retracted position.

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = acceleration
          description = """
Acceleration of trapezoidal profile for normal motion caused by SELECT command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = deceleration
          description = """
Deceleration of trapezoidal profile for normal motion caused by SELECT command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = velocity
          description = """
Maximum velocity of trapezoipdal profile for normal motion caused by SELECT command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = smoothing
          description = """
Smoothing factor of trapezoidal profile for normal motion caused by SELECT command. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = accelerationHoming
          description = """
Acceleration of trapezoidal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = decelerationHoming
          description = """
Deceleration of trapezoidal profile for homoing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = velocityHoming
          description = """
Maximum velocity of trapezoipdal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = smoothingHoming
          description = """
Smoothing factor of trapezoidal profile for homing. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.

"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = conversion
          description = "Converstion factor to convert raw steps to phyisical distance."
          type = float
          units = mm/step
        }
        {
          name = temperatureThreshold
          description = "Temperature threashold for overheating protection."
          type = float
          units = K
        }
        {
          name = motorCurrent
          description = """
The motor current for this stage.

__TDB__: Define the range, or the possible values.
"""
          type = float
          units = A
        }
      ]
    }
    {
      name = PRISM_state
      description = "Standard assembly state as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = cmd
            description  = "command state"
            enum = [UNINITIALIZED, READY, BUSY, COTINUOUS]
        }
        {
            name = move
            description  = "state of mechanisms that can move"
            enum = [UNINDEXED, INDEXING, INDEXED, MOVING]
        }
        {
            name = onTarget
            description  = "state of mechanisms with respect to requested target position / configuration"
            type = boolean
        }
        {
            name = debug
            description  = "debug level"
            enum = [TBD]
        }
      ]
    }
    {
      name = PRISM_cmdState
      description = "Standard assembly command status as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = command
            description  = "Name of the most recent command."
            type = string
        }
        {
            name = args
            description  = "String representation of the command arguments."
            type = string
        }
        {
            name = caller
            description  = "String identifying the caller (if available)"
            type = string
        }
        {
            name = runID
            description  = "A run ID associated with the command."
            type = integer
        }
        {
            name = ack
            description  = "Initial acknowledgement"
            enum = [ACCEPTED, REJECTED]
        }
        {
            name = ackMsg
            description  = "Acknowledgement string explaining why a command is REJECTED. This string will generally be cleared if the command is ACCEPTED."
            type = string
        }
        {
            name = completion
            description  = "Status of completion"
            enum = [INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED]
        }
        {
            name = completionMsg
            description  = "The message string is cleared when a command has been successfully acknowledged and/or is INPROGRESS. The message string is filled in if the command fails."
            type = string
        }
      ]
    }
    {
      name = PRISM_following
      description = """
This is a single boolean value (or tuple of two boolean values each of which represents one rotary stage) which indicates whether all the stages keep moving AND the position errors are within the prescribed accuracies. If this state is false when no exposure is on-going, it means that the new exposure should not be started. If this value becomes false during an exposure, the quality of that exposure cannot be guaranteed.
"""
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = state
            description  = "Indicates whether all the stages keep moving AND the position errors are within the prescribed accuracies."
            type = boolean
        }
      ]
    }
    {
      name = temperatureInterlock
      description = """Whether the motion is prohibited due to overheating."""
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = p1_stage
            description  = "Whether the motion of the P1 rotary stage is prohibitied due to overheating."
            type = boolean
        }
        {
            name = p2_stage
            description  = "Whether the motion of the P2 rotary stage is prohibitied due to overheating."
            type = boolean
        }
        {
            name = linear_stage
            description  = "Whether the motion of the linear stage is prohibitied due to overheating."
            type = boolean
        }
      ]
    }
    {
      name = PRISM_stageConf
      description = """
Current configuration for the rotary stage.

This telemetry can be used to check if the current configuration is as intended. If not, the user shoud edit the configuration via Configuration Service, and re-initialize this assembly so that the latest configuration will be reloaded. This telemetry is updated only when initialization is performed.

__TODO__: Add configuration of the model to compensate backlash and mechanical imperfections, and the parameters of the model. It is likely to be a simple inear equation. This equation should also include the conversion from the raw steps to the physical quantity.
"""
      maxRate = 1
      archive = true
      attributes = [
        {
          name = prism
          description = "Which prism pair"
          type = integer
          minimum = 1
          maximum = 2
          exclusiveMinimum = false
          exclusiveMaximum = false
        }
        {
          name = accuracy
          description = "Position accuracy required for the tracking motion."
          type = float
          units = degree
        }
        {
          name = offset
          description = "Offset angle from the home switch to the 0 degree angle."
          type = float
          units = degree
          minimum = -180
          maximum = 180
          exclusiveMinimum = true
          exclusiveMaximum = false 
        }
        {
          name = acceleration
          description = """
Acceleration of trapezoidal profile for normal rotation. This value won't be applied to tracking motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = degree/s/s
        }
        {
          name = deceleration
          description = """
Deceleration of trapezoidal profile for normal rotation. This value won't be applied to tracking motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = degree/s/s
        }
        {
          name = velocity
          description = """
Maximum velocity of trapezoidal profile for normal rotation. This value won't be applied to tracking motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = degree/s
        }
        {
          name = smoothing
          description = """
Smoothing factor of trapezoidal profile for normal rotation. This value won't be applied to tracking motion. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer.

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = accelerationHoming
          description = """
Acceleration of trapezoidal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = degree/s/s
        }
        {
          name = decelerationHoming
          description = """
Deceleration of trapezoidal profile for homoing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = degree/s/s
        }
        {
          name = velocityHoming
          description = """
Maximum velocity of trapezoipdal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = degree/s
        }
        {
          name = smoothingHoming
          description = """
Smoothing factor of trapezoidal profile for homing. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = temperatureThreshold
          description = "Temperature threashold for overheating protection."
          type = float
          units = K
        }
        {
          name = softwareLimits
          description = "Software limits of the rorary stage. In the tracking mode, the positional demands that exceed this range will be rounded to equivalent angles within the software limit range. Otherwise, the positional demands will be ignored."
          type = array
          dimensions: [2]
          items = {
            type = float
          }
          units = degree
        }
        {
            name = currentSeparation
            description  = """
Current separation (differential angle of two rotary stages) in FCRS<sub>IRIS-ROT</sub>.
"""
            type = float
            units = degree
        }
        {
          name = motorCurrent
          description = """
The motor current for this stage.

__TDB__: Define the range, or the possible values.
"""
          type = float
          units = A
        }
      ]
    }
    {
      name = angle
      description = "Current/target angles of ADC."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = currentOrientation
            description  = """
The angle of the zenith direction in FCRS<sub>IRIS-ROT</sub>.
"""
            type = float
            units = degree
        }
        {
            name = currentSeparation
            description  = """
Current separation (differential angle of two rotary stages) in FCRS<sub>IRIS-ROT</sub>.
"""
            type = float
            units = degree
        }
      ]
    }
  ]

  alarms = [
    {
      name = misstep
      description = """
Indicates a misstep of one (or more) of the stepper motors.

The actual scheme to detect missteps is TBD.

When this alarm happens, the operator is expected to acknowledges this alarm and perform “datum” again. If this alarm is repeated many times, it indicates severe damage of the mechanisms and the observer is expected to report this problem to an instrument specialist.

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = stall
      description = """
Indicates that one or more stages do not respond, and this assembly cannot do the job.

Note that the observer can ignore this alarm if she or he does not use the cold stop, but shall report this problem to an instrument specialist. The communication failure between Galil HCD and the motion controller would also trigger this alarm.

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = comFailure
      description = """
This alarm indicates the lost communication with the underlying Galil HCD.

This alarm is NOT latched.
"""
      severity = minor
      archive = true
    }
    {
      name = unexpectedMotion
      description = """
This alarm is raised when Galil HCD reports any motion of stages, but this assembly does not expect it. This alarm is normally raised when Galil HCD is commanded not from the assembly, but from, for example, engineering GUI directly.

When this alarm happens, the observer is expected to execute ‘stop’ command if the on-going motion is not what the observer expects. 

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = inconsistentStatus
      description = """
This alarm is raised when the statuses reported by Galil HCD are inconsistent with what this assembly currently expects. For example, the home switch may be turned on for some reason even if the stage is not moving and the current position is very far from the home position. It shouldn’t happen, but if it happens, this alarm is raised.

When this alarm happens, the observer is expected to check the statuses of this assembly. The observer can ignore this alarm and continue their observation if they think this alarm is not severe, but it is expected that the observer reports this issue to the instrument specialist after their observation. The observer may want to stop their observation when she or he finds this assembly behaving weirdly after this alarm, or if this alarm is repeatedly raised.

This alarm is latched.
"""
      severity = major
      archive = true
    }
   {
      name = hardwareLimit
      description = """
This alarm is activated when any of the stages hits a limit switch.

This alarm must not happen during an observation. If it does, this alarm shall be reported to an instrument expert.

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = trackingFailure
      description = """
This alarm is activated when a stage cannot keep tracking motion.

It may happen when the event streams from TCS are not delivered to this assembly at the prescribed rate, or before the deadline. It may also happen when Galil HCD or the motion controller do not respond as expected during the tracking motion.

If this alarm is continuously being raised, the observer or the operator may want to stop the current exposure. If this alarm does not last for a long time, the observer has an option to keep the current exposure and do not use the readouts taken during that time to create a science raw frame. Note that, even if the event streams are not delivered before the deadline, this assembly (or the underlying HCD) tries to keep the tracking motion extrapolating the previous positional demands. Thus, normally, the observers can ignore this alarm.

This alarm is NOT latched.
"""
      severity = minor
      archive = true
    }
   ]
}
