subsystem = IRIS
component = sci-adc-assembly

subscribe {
  description = """
IRIS Science Path ADC Assembly subscribes to some events from TCS to calculate the angle of two prisms. This model file is compatible with [ICD TCS-IRIS (TMT.SEN.ICD.13.002.REL08)](https://docushare.tmt.org/docushare/dsweb/Get/Document-25887/ICD_TCS_IRIS_REL08.docx)

__ASSUMPTOIN__: Oritation of the axis of dispersion due to atmospheric refraction is given in ICRS (Instrument Coordinate System) which rotetes with respect to NFIRAOS so that this assembly does not have to calculate orientation with respect to IRIS.
"""

  eventStreams = [
    {
      subsystem = TCS
      component = TBD
      name = tcs.cm.iris.imgCurAtmDispersion
      requiredRate = 1
      maxRate = 1
      // REQ-2-IRIS-4250
      // TODO: define the counterpart
    }
    {
      subsystem = TCS
      component = TBD
      name = tcs.cm.iris.imgNewAtmDispersion
      // REQ-2-IRIS-4250
      // TODO: define the counterpat
    }
    {
      subsystem = TCS
      component = TBD
      name = tcs.pk.pointingStatus
      // REQ-2-IRIS-4250
      // TODO: define the counterpart
    }
    {
      subsystem = IRIS
      component = coldstop-assembly
      name = tracking
      requiredRate = 1
      // One event stream from cold stop assembly which indicates the current rotation, which will be used for pupil rotation tracking mode.
    }
    {
      subsystem = IRIS
      component = rotator-assembly
      name = rotator
      requiredRate = 1
      // One event stream from rotator assembly which indicates the current rotation, which will be used to convert coordinates between FCRS<sub>BP</sub> and FCRS<sub>IRIS-ROT</sub>.
    }
  ]
  telemetry = [
    {
      subsystem = IRIS
      component = TBD
      name = dewer_status
      // One telemetry from somewhere in IRIS is required to judge if 'unlock' is allowed.
      // TODO: ask someone to define equivalent telemetry
    }
  ]
}
