subsystem = IRIS
component = coldstop-assembly

description = """
Commands which can be accepted by IRIS Cold Stop Assembly.

This command model is designed based on [Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.DRF01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_DRF01_b.docx). As proposed by the design pattern, standard assembly commands and assembly-specific commands are provided for each functional group. All commands are classified into either 'request' or 'submit' based on the command type defintion described in the design pattern document.
"""

receive = [
    {
        name = INIT
        description = """
This command causes the assembly to initialize its variables, read configuration, and verify dependencies. It prepares the assembly internally such that it is available to communicate with outside processes and begin managing the stages. It does not cause any movement or initiate any action on the hardware but, it may validate connections and hardware presence before completing. This is an internal software assembly initialization only and does not trickle down to other software components or dependencies.

This command can be invoked only when none of the stages is in motion. All commands will be rejected during the initialization. 

Initialization can fail for various reasons including HCD communications failure, hardware failure, or invalid configurations.  In this case, the command state will report an error.

Command type: request
"""
    }
    {
        name = TEST
        description = """
This command executes a self-test. Actual action to be taken is TBD.

This command never drives any stages.

This command can be invoked only when none of the stages is in motion. All commands will be rejected during the test.

Command type: request
"""
    }
    {
        name = DATUM
        description = """
Perform homing of all the stages and reset the stepper motor counters to accurately and precisely position the stages.

This command can be invoked only when none of the stages is in motion. All commands except “stop” will be rejected during the datum.

In the event of an error or failure to index, datum will return an error response, the command state will be set to error, and the movement state will be un-indexed.  The position will report as unknown.

Command type: submit
"""
    }
    {
        name = FOLLOW
        description = """
Transitions this assembly into the continuous state where it performs tracking motion continuously based on the event stream from TCS.

This command is valid only when the mask is inserted into the light path.

This command can be invoked only when none of the stages is in motion. All commands except “stop” will be rejected during the execution of this command.

Command type: request
"""
    }
    {
        name = MOVE
        description = """
This command moves all three stages to the specified position. It is expected that this command will not be used in the operation. This is mostly for engineering purposes.

This command can be invoked only when none of the stages is in motion. All commands except “stop” will be rejected during the execution of this command.

Command type: submit
"""
        args = [
            {
                name = x_pos
                description = """
X axis absolute position or relative amount from the current position (depends on _x_mode_ ).

__TODO__: Define minimum and maximum.
"""
                type = float
                units = mm
                default = 0
            }
            {
                name = x_mode
                description = """
This argument specifies if the given position in _x_pos_ is absolute position or relative amount.
"""
                enum = [ABSOLUTE, RELATIVE]
                default = RELATIVE
            }
            {
                name = y_pos
                description = """
Y axis absolute position or relative amount from the current position (depends on _y_mode_ ).

__TODO__: Define minimum and maximum.
"""
                type = float
                units = mm
                default = 0
            }
            {
                name = y_mode
                description = """
This argument specifies if the given position in _y_pos_ is absolute position or relative amount.
"""
                enum = [ABSOLUTE, RELATIVE]
                default = RELATIVE
            }
            {
                name = theta
                description = """
Theta axis absolute angle or relative amount from the current angle (depends on _theta_mode_ ).

__TBD__: Determine the orientation of 0 degree.
"""
                minimum = -180
                maximum = 180
                exclusiveMinimum = true
                exclusiveMaximum = false
                type = float
                units = degree
                default = 0
            }
            {
                name = theta_mode
                description = """
This argument specifies if the given angle in _theta_ is absolute angle or relative amount from the current angle.
"""
                enum = [ABSOLUTE, RELATIVE]
                default = RELATIVE
            }
        ]
    }
    {
        name = PARK
        description = """
This command basically does nothing. The mask position can be placed anywhere when the instrument is not in use.

Command type: submit
"""
    }
    {
        name = STOP
        description = """
Stop executing the current command, and stop the rotation of all stages. This command is also used to stop the tracking motion.

If one (or more) of the stages cannot be stopped within the expected time considering the configured deceleration, this command will be considered as failed. It is up to the caller what to do next if this command fails. Maybe the caller should try to turn off the power of the motion controller through Power Assembly.

Command type: submit
"""
    }
    {
        name = DEBUG
        description = """
This will set the current debug level. This is for debugging purposes and allows the user to increase the level of logging for debugging purposes.

Command type: request
"""
    }
    {
        name = SELECT
        description = """
This command retracts the mask from the light path, or inserts it. This command only drives the X linear stage.

This command can be invoked only when none of the stages is in motion. All commands except “stop” will be rejected during the execution of this command.

Command type: submit
"""
    }
]
