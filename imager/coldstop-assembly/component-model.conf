subsystem = IRIS
component = coldstop-assembly
modelVersion = "1.0"

wbsId = tmt.ins.inst.iris.imager.sw

title = "IRIS Cold Stop Assembly"
prefix = iris.imager.coldstop
componentType = Assembly

description = """
The cold stop masks out everything outside of an image of the primary mirror, stopping down the field to reduce noise created by the thermal emission of the surrounding telescope structure. It consists of one rotational axis (theta axis) and two translational axes (X and Y axes). X axis will be used not jut for alignment, but also for retracting the pupil mask from the science light path. This assembly is responsible for controlling all these three axes synchronously with pupil rotation and instrument rotation.

This assembly uses telemetries from the TCS to adjust the cold stop position and rotation.

Power control of the motion controller will be done at sequencer level through power-assembly.

This assembly provide only one functional group.

__TBD__: For normal motion (moving to a specified position), point-to-point motion in trapezoidal profile will be used. For tracking motion, Position Tracking mode will be used. For that, the information required to calculate the desired position should be obtained in advance (how many seconds is __TBD__).

__TBD__: Required control rate of cold stop tracking should be determined.

__TBD__: 'float' is used for almost all floating point values. For the values which require more precision, it can be replaced by 'double'.

__TBD__: Find Edge routine is used for finding home position for all three axes. Because this routine does not support homing from one direction, a custom routine may have to be implemented for translational axes to detect home position from the same direction all the time.

__TBD__: '0 mm' in X/Y axes means that they are at the home position. There are one non-contact switch in all three axes. There are two microlever switches for X/Y axes respectively at the forward and reverse limit positions.

__TODO__: Define coordinate.

__TODO__: Define alarms.

__TODO__: Make state transition diagram.
"""
