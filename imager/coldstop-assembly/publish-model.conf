subsystem = IRIS
component = coldstop-assembly

publish {

  description = "Telemetries published by IRIS Cold Stop Assembly."

  telemetry = [
    {
      name = position
      description = "Current position of the mask."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = x_pos
            description  = "Current position in X axis."
            type = float
            units = mm
        }
        {
            name = y_pos
            description  = "Current position in Y axis."
            type = float
            units = mm
        }
        {
            name = theta
            description  = "Current angle of the rotary stage."
            type = float
            units = degree
        }
      ]
    }
    {
      name = positionError
      description = """
Position errors of the mask with the timestamp. The position demands published by TCS are considered as the desired position in the tracking mode, and the position error is calculated as the difference between the desired position and the current position. Otherwise, the goal positions specified by "MOVE" or "SELECT" command are considered as the desired position.

TODO: Add timestamp attribute.
"""
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = x_error
            description  = "Position error in X axis."
            type = float
            units = mm
        }
        {
            name = y_error
            description  = "Position error in Y axis."
            type = float
            units = mm
        }
        {
            name = theta_error
            description  = "Position error of the rotary stage."
            type = float
            units = degree
        }
      ]
    }
    {
      name = state
      description = "Standard assembly state as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = cmd
            description  = "command state"
            enum = [UNINITIALIZED, READY, BUSY, COTINUOUS]
        }
        {
            name = cmd
            description  = "state of mechanisms that can move"
            enum = [UNINDEXED, INDEXING, INDEXED, MOVING]
        }
        {
            name = onTarget
            description  = "state of mechanisms with respect to requested target position / configuration"
            type = boolean
        }
        {
            name = debug
            description  = "debug level"
            enum = [TBD]
        }
      ]
    }
    {
      name = cmdState
      description = "Standard assembly command status as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = command
            description  = "Name of the most recent command."
            type = string
        }
        {
            name = args
            description  = "String representation of the command arguments."
            type = string
        }
        {
            name = caller
            description  = "String identifying the caller (if available)"
            type = string
        }
        {
            name = runID
            description  = "A run ID associated with the command."
            type = integer
        }
        {
            name = ack
            description  = "Initial acknowledgement"
            enum = [ACCEPTED, REJECTED]
        }
        {
            name = ackMsg
            description  = "Acknowledgement string explaining why a command is REJECTED. This string will generally be cleared if the command is ACCEPTED."
            type = string
        }
        {
            name = completion
            description  = "Status of completion"
            enum = [INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED]
        }
        {
            name = completionMsg
            description  = "The message string is cleared when a command has been successfully acknowledged and/or is INPROGRESS. The message string is filled in if the command fails."
            type = string
        }
      ]
    }
    {
      name = following
      description = """
This telemetry contains a single boolean value (or tuple of three boolean values each of which represents one stage) which indicates whether all the stages keep moving AND the position errors are within the prescribed accuracies. If this state is false when no exposure is on-going, it means that the new exposure should not be started. If this value becomes false during an exposure, the quality of that exposure cannot be guaranteed.

For example, when acquiring a new target, the cold stop will be commanded to rotate to the corresponding initial position, but it is possible that, even when the telescope has been positioned, the rotary stage can be still moving to the designated position. In this case, this telemetry continues to be false until the rotary stage reaches to the designated position (i.e. the position specified by the event streams published by TCS). The exposure should be started after this state turns to be true.

This state can be also false during the observation if this assembly cannot receive event streams from TCS, or if Galil HCD or the motion controller do not respond.
"""
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = state
            description  = "Indicates whether all the stages keep moving AND the position errors are within the prescribed accuracies."
            type = boolean
        }
      ]
    }
    {
      name = temperatureInterlock
      description = """
Whether the motion is prohibited due to overheating.
"""
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = x_stage
            description  = "Whether the motion of the X linear stage is prohibitied due to overheating."
            type = boolean
        }
        {
            name = y_stage
            description  = "Whether the motion of the Y linear stage is prohibitied due to overheating."
            type = boolean
        }
        {
            name = rotary_stage
            description  = "Whether the motion of the rotary stage is prohibitied due to overheating."
            type = boolean
        }
      ]
    }
    {
      name = thetaConf
      description = """
Current configuration for the rotary stage..

This telemetry can be used to check if the current configuration is as intended. If not, the user shoud edit the configuration via Configuration Service or a local file, and re-initialize this assembly so that the latest configuration will be reloaded. This telemetry is updated only when initialization is performed.
"""
      maxRate = 1
      archive = true
      attributes = [
        {
          name = angleOffset
          description = "Offset angle from the home switch to the 0 degree angle."
          type = float
          units = degree
          minimum = -180
          maximum = 180
          exclusiveMinimum = true
          exclusiveMaximum = false 
        }
        {
          name = rawAngleOffset
          description = """
Raw offset angle from the home switch to the 0 degree angle.

__TODO__: Define maximum and minimum value.
"""
          type = integer
        }
        {
          name = acceleration
          description = """
Acceleration of trapezoidal profile for normal rotation. This value won't be applied to tracking motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = degree/s/s
        }
        {
          name = rawAcceleration
          description = """
Raw acceleration of trapezoidal profile for normal rotation. This value won't be applied to tracking motion. This value corresponds to the argument of AC command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
        }
        {
          name = deceleration
          description = """
Deceleration of trapezoidal profile for normal rotation. This value won't be applied to tracking motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = degree/s/s
        }
        {
          name = rawDeceleration
          description = """
Raw deceleration of trapezoidal profile for normal rotation. This value won't be applied to tracking motion. This value corresponds to the argument of DC command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = velocity
          description = """
Maximum velocity of trapezoidal profile for normal rotation. This value won't be applied to tracking motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = degree/s
        }
        {
          name = rawVelocity
          description = """
Raw maximum velocity of trapezoidal profile for normal rotation. This value won't be applied to tracking motion. This value corresponds to the argument of SP command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = smoothing
          description = """
Smoothing factor of trapezoidal profile for normal rotation. This value won't be applied to tracking motion. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer.

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = accelerationHoming
          description = """
Acceleration of trapezoidal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = degree/s/s
        }
        {
          name = rawAccelerationHoming
          description = """
Raw acceleration value of trapezoidal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = integer
        }
        {
          name = decelerationHoming
          description = """
Deceleration of trapezoidal profile for homoing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = degree/s/s
        }
        {
          name = rawDecelerationHoming
          description = """
Raw deceleration value of trapezoidal profile for homing. This value corresponds to the argument of DC command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = velocityHoming
          description = """
Maximum velocity of trapezoipdal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = degree/s
        }
        {
          name = rawVelocityHoming
          description = """
Raw maximum velocity value of trapezoipdal profile for homing. This value corresponds to the argument of SP command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = smoothingHoming
          description = """
Smoothing factor of trapezoidal profile for homing. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
      ]
    }
    {
      name = xAxisConf
      description = """
Current configuration of the linear stage for X axis motion.

This telemetry can be used to check if the current configuration is as intended. If not, the user shoud edit the configuration via Configuration Service or a local file, and re-initialize this assembly so that the latest configuration will be reloaded. This telemetry is updated only when initialization is performed.
"""
      maxRate = 1
      archive = true
      attributes = [
        {
          name = insertedPosition
          description = """
Inserted position.

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = rawInsertedPosition
          description = """
Raw inserted position.

__TODO__: Define maximum and minimum value.
"""
          type = integer
        }
        {
          name = insertedPositionDelta
          description = """
Acceptable positioning deviation at the inserted position.

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = rawInsertedPositionDelta
          description = """
Raw acceptable positioning deviation at the inserted position.

__TODO__: Define maximum and minimum value.
"""
          type = integer
        }
        {
          name = retractedPosition
          description = """
Retracted position.

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = rawRetractedPosition
          description = """
Raw retracted position.

__TODO__: Define maximum and minimum value.
"""
          type = integer
        }
        {
          name = retractedPositionDelta
          description = """
Acceptable positioning deviation at the retracted position.

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = rawRetractedPositionDelta
          description = """
Raw acceptable positioning deviation at the retracted position.

__TODO__: Define maximum and minimum value.
"""
          type = integer
        }
        {
          name = acceleration
          description = """
Acceleration of trapezoidal profile for normal motion (motion to move to the designated position, not the tracking motion) around the inserted position.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = rawAcceleration
          description = """
Raw acceleration value of trapezoidal profile for normal motion around the inserted position. This value corresponds to the argument of AC command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
        }
        {
          name = deceleration
          description = """
Deceleration of trapezoidal profile for normal motion around the inserted position.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = rawDeceleration
          description = """
Raw deceleration value of trapezoidal profile for normal motion around the inserted position. This value corresponds to the argument of DC command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = velocity
          description = """
Maximum velocity of trapezoipdal profile for normal motion around the inserted position.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = rawVelocity
          description = """
Raw maximum velocity value of trapezoipdal profile for normal motion around the inserted position. This value corresponds to the argument of SP command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = smoothing
          description = """
Smoothing factor of trapezoidal profile for normal motion around the inserted position. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = accelerationHoming
          description = """
Acceleration of trapezoidal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = rawAccelerationHoming
          description = """
Raw acceleration value of trapezoidal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = integer
        }
        {
          name = decelerationHoming
          description = """
Deceleration of trapezoidal profile for homoing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = rawDecelerationHoming
          description = """
Raw deceleration value of trapezoidal profile for homing. This value corresponds to the argument of DC command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = velocityHoming
          description = """
Maximum velocity of trapezoipdal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = rawVelocityHoming
          description = """
Raw maximum velocity value of trapezoipdal profile for homing. This value corresponds to the argument of SP command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = smoothingHoming
          description = """
Smoothing factor of trapezoidal profile for homing. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.

"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = accelerationInOut
          description = """
Acceleration of trapezoidal profile for insertion and retraction motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = rawAccelerationInOut
          description = """
Raw acceleration value of trapezoidal profile for insertion and retraction motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = integer
        }
        {
          name = decelerationInOut
          description = """
Deceleration of trapezoidal profile for insertion and retraction motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = rawDecelerationInOut
          description = """
Raw deceleration value of trapezoidal profile for insertion and retraction motion. This value corresponds to the argument of DC command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = velocityInOut
          description = """
Maximum velocity of trapezoipdal profile for insertion and retraction motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = rawVelocityInOut
          description = """
Raw maximum velocity value of trapezoipdal profile for insertion and retraction motion. This value corresponds to the argument of SP command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = smoothingInOut
          description = """
Smoothing factor of trapezoidal profile for insertion and retraction motion. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.

"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = softwareLimits
          description = "Software limits in X axis. If the linear stage goes over this range, an alarm is activated."
          type = array
          dimensions: [2]
          items = {
            type = float
          }
          units = mm
        }
        {
          name = supressSoftwareLimitAlarm
          description = "Indicates whether the alarm for the software limits should be supressed. This configuration is useful to supress the alarm when an instrument specialist forcibly moves the linear stae in X axis (using an engineering screen) over the software limit range for maintenance."
          type = boolean
          default = false
        }
      ]
    }
    {
      name = yAxisConf
      description = """
Current configuration of the linear stage for Y axis motion.

This telemetry can be used to check if the current configuration is as intended. If not, the user shoud edit the configuration via Configuration Service or a local file, and re-initialize this assembly so that the latest configuration will be reloaded. This telemetry is updated only when initialization is performed.
"""
      maxRate = 1
      archive = true
      attributes = [
        {
          name = acceleration
          description = """
Acceleration of trapezoidal profile for normal motion (motion to move to the designated position, not the tracing motion).

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = rawAcceleration
          description = """
Raw acceleration value of trapezoidal profile for normal motion. This value corresponds to the argument of AC command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
        }
        {
          name = deceleration
          description = """
Deceleration of trapezoidal profile for normal motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = rawDeceleration
          description = """
Raw deceleration value of trapezoidal profile for normal motion. This value corresponds to the argument of DC command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = velocity
          description = """
Maximum velocity of trapezoipdal profile for normal motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = rawVelocity
          description = """
Raw maximum velocity value of trapezoipdal profile for normal motion. This value corresponds to the argument of SP command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = smoothing
          description = """
Smoothing factor of trapezoidal profile for normal motion. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = accelerationHoming
          description = """
Acceleration of trapezoidal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = rawAccelerationHoming
          description = """
Raw acceleration value of trapezoidal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = integer
        }
        {
          name = decelerationHoming
          description = """
Deceleration of trapezoidal profile for homoing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = rawDecelerationHoming
          description = """
Raw deceleration value of trapezoidal profile for homing. This value corresponds to the argument of DC command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = velocityHoming
          description = """
Maximum velocity of trapezoipdal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = rawVelocityHoming
          description = """
Raw maximum velocity value of trapezoipdal profile for homing. This value corresponds to the argument of SP command.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = integer
        }
        {
          name = smoothingHoming
          description = """
Smoothing factor of trapezoidal profile for homing. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = softwareLimits
          description = "Software limits of the linear stage. If the positioner goes over this range, an alarm is activated."
          type = array
          dimensions: [2]
          items = {
            type = float
          }
            units = mm
        }
        {
          name = supressSoftwareLimitAlarm
          description = "Indicates whether the alarm for the software limits is supressed. This configuration is useful to supress the alarm when an instrument specialist forcibly moves the linear stage (using an engineering screen) over the software limit range for maintenance."
          type = boolean
          default = false
        }
      ]
    }
  ]

  alarms = [
    {
      name = xAxisSoftwareLimit
      description = """
This alarm is activated when the linear stage goes beyond a software limit in X axis. This alarm may be activated when someone forcibly moves the linaer stage beyond the software limit by using an engineering screen, or by directly sending commands to the motion controller. Because the current position is inferred from the total number of pulses sent from the motion controller after the last homing, this alarm may be activated during homing after step-out occurs.

This alarm should not happen during an observation. If it does, this alarm should be reported to an instrument expert.
"""
      severity = minor
      archive = true
    }
    {
      name = xAxisHardwareLimit
      description = """
This alarm is activated when the linear stage hits a limit switch in X axis.

If the linear stage is still moving beyonds the limit switch in X axis, the operator should immediately stop the motion by sending stop command. If the motion controller does not stop even after that, the operator should turn off the motion controller. Because there is a mechanical block at each end, the linear stage will not derail from the linear guide even if the linear stage goes over the limit switch, but the hitting the mechanical block may cause unnecessary damage to the mechanisms, so the motion should be stopped immediately.

This alarm should not happen during an observation. If it does, this alarm should be reported to an instrument expert. If the linear stage goed beyond the limit switch, the instrument expert has to forcibly move it back to an operational range using an engineering screen.
"""
      severity = major
      archive = true
    }
    {
      name = yAxisSoftwareLimit
      description = """
This alarm is activated when the linear stage goes beyond a software limit in Y axis. This alarm may be activated when someone forcibly moves the linear stage beyond the software limit in Y axis by using an engineering screen, or by directly sending commands to the motion controller. Because the current position is inferred from the total number of pulses sent from the motion controller after the last homing, this alarm may be activated during homing after step-out occurs.

This alarm should not happen during an observation. If it does, this alarm should be reported to an instrument expert.
"""
      severity = minor
      archive = true
    }
    {
      name = yAxisHardwareLimit
      description = """
This alarm is activated when the linear stage hits a limit switch in Y axis.

If the linear stage is still moving beyonds the limit switch in Y axis, the operator should immediately stop the motion by sending stop command. If the motion controller does not stop even after that, the operator should turn off the motion controller. Because there is a mechanical block at each end, the linear stage will not derail from the linear guide even if the linear stage goes over the limit switch, but the hitting the mechanical block may cause unnecessary damage to the mechanisms, so the motion should be stopped immediately.

This alarm should not happen during an observation. If it does, this alarm should be reported to an instrument expert. If the linear stage goed beyond the limit switch, the instrument expert has to forcibly move it back to an operational range using an engineering screen.
"""
      severity = major
      archive = true
    }
    {
      name = stall
      description = """
This alarm is activated when a severe stall (step-out) of any motor is detected. The actual scheme to detect the stall is TBD.
"""
      severity = major
      archive = true
    }
    {
      name = trackingFailure
      description = """
This alarm is activated when tracking motion cannot continue properly.

Note that tracking failure caused by step-out cannot be detected during the tracking motion because there is no position sensor except the home switch. This alarm just indicates that responses from the motion controller are delayed for some reason. Most probably it is caused by network congestion within IRIS private network.

If the alarm stays activated for a long time, or if this alarm happens repeatedly, the following actions may resolve this issue.

* Reload of this assembly.
* Reload the underlying Galil HCD.
* Cycliing the power of the motion controller.
* Reboot the computer which runs this assembly and Galil HCD.

If this alarm cannot be deactivated by the above actions, it should be reported to an instrument expert.
"""
      severity = minor
      archive = true
    }
  ]
}