subsystem = IRIS
component = coldstop-assembly

publish {

  description = "Telemetries published by IRIS Cold Stop Assembly."

  events = [
    {
      name = current
      description = """
Current position and position errors of the mask with the timestamp.

In the tracking mode, the position demand published by TCS is considered as the desired position, and the position error is the differences between the desired position and the current position. Otherwise, the goal position specified by "MOVE" or "SELECT" command is considered as the desired position.

TODO: Add timestamp attribute.
"""
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = x_pos
            description  = "Current position in X axis."
            type = float
            units = mm
        }
        {
            name = y_pos
            description  = "Current position in Y axis."
            type = float
            units = mm
        }
        {
            name = theta
            description  = "Current angle of the rotary stage."
            type = float
            units = degree
        }
        {
            name = x_error
            description  = "Position error in X axis."
            type = float
            units = mm
        }
        {
            name = y_error
            description  = "Position error in Y axis."
            type = float
            units = mm
        }
        {
            name = theta_error
            description  = "Position error of the rotary stage."
            type = float
            units = degree
        }
      ]
    }
    {
      name = target
      description = """
Target position of the mask.
"""
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
          name          = counter
          description   = "Unique TCS target counter that is incremented (with rollover) each time a new target is acquired. TBD whether this is required."
          type          = long
        }
        {
            name = x_pos
            description  = "Target position in X axis."
            type = float
            units = mm
        }
        {
            name = y_pos
            description  = "Target position in Y axis."
            type = float
            units = mm
        }
        {
            name = theta
            description  = "Target angle of the rotary stage."
            type = float
            units = degree
        }
      ]
    }
    {
      name = state
      description = """Imager coldstop assembly state
      
      <em>
      Discussion: While the AOSQ does not control this assembly, it may consider monitoring its state when assessing the health of the AO system. The cold stop cmd attribute should be in CONTINUOUS mode and onTarget for the ODGWs to function properly.
      </em>
      """
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = cmd
            description  = "command state"
            enum = [UNINITIALIZED, READY, BUSY, CONTINUOUS]
        }
        {
            name = move
            description  = "state of mechanisms that can move"
            enum = [UNINDEXED, INDEXING, INDEXED, MOVING]
        }
        {
            name = onTarget
            description  = """
If this assembly is in tracking mode, it indicates whether all the stages keep moving AND the position errors are within the prescribed accuracies. A new exposure shouldn’t be started until this attribute becomes true. If this value becomes false during an exposure, the quality of that exposure cannot be guaranteed. If this assembly is not in tracking mode, it indicates whether the stages are positioned in the location specified by "MOVE", "SELECT" or "DATUM" commands.
"""
            type = boolean
        }
        {
            name = debug
            description  = "debug level"
            enum = [TBD]
        }
        {
            name = locked
            description = "Indicates whether this assembly is locked. Any command that initiates motion will be rejected when locked."
            type = boolean
        }
        {
            name = interlock
            description = "Indicates whether the motion is prohibited due to the interlock signal from Safety HCD."
            type = boolean
        }
      ]
    }
    {
      name = cmdStatus
      description = "Standard assembly command status as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = command
            description  = "Name of the most recent command."
            type = string
        }
        {
            name = args
            description  = "String representation of the command arguments."
            type = string
        }
        {
            name = caller
            description  = "String identifying the caller (if available)"
            type = string
        }
        {
            name = runID
            description  = "A run ID associated with the command."
            type = integer
        }
        {
            name = ack
            description  = "Initial acknowledgement"
            enum = [ACCEPTED, REJECTED]
        }
        {
            name = ackMsg
            description  = "Acknowledgement string explaining why a command is REJECTED. This string will generally be cleared if the command is ACCEPTED."
            type = string
        }
        {
            name = completion
            description  = "Status of completion"
            enum = [INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED]
        }
        {
            name = completionMsg
            description  = "The message string is cleared when a command has been successfully acknowledged and/or is INPROGRESS. The message string is filled in if the command fails."
            type = string
        }
      ]
    }
    {
      name = thetaConf
      description = """
Current configuration for the rotary stage.

This telemetry can be used to check if the current configuration is as intended. If not, the user shoud edit the configuration via Configuration Service, and re-initialize this assembly so that the latest configuration will be reloaded. This telemetry is updated only when initialization is performed.

__TODO__: Add configuration of the model to compensate backlash and mechanical imperfections, and the parameters of the model. It is likely to be a simple inear equation. This equation should also include the conversion from the raw steps to the physical quantity.
"""
      maxRate = 1
      archive = true
      attributes = [
        {
          name = accuracy
          description = "Position accuracy required for the tracking motion."
          type = float
          units = degree
        }
        {
          name = offset
          description = "Offset angle from the home switch to the 0 degree angle."
          type = float
          units = degree
          minimum = -180
          maximum = 180
          exclusiveMinimum = true
          exclusiveMaximum = false 
        }
        {
          name = acceleration
          description = """
Acceleration of trapezoidal profile for normal rotation. This value won't be applied to tracking motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = degree/s/s
        }
        {
          name = deceleration
          description = """
Deceleration of trapezoidal profile for normal rotation. This value won't be applied to tracking motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = degree/s/s
        }
        {
          name = velocity
          description = """
Maximum velocity of trapezoidal profile for normal rotation. This value won't be applied to tracking motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = degree/s
        }
        {
          name = smoothing
          description = """
Smoothing factor of trapezoidal profile for normal rotation. This value won't be applied to tracking motion. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer.

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = accelerationHoming
          description = """
Acceleration of trapezoidal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = degree/s/s
        }
        {
          name = decelerationHoming
          description = """
Deceleration of trapezoidal profile for homoing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = degree/s/s
        }
        {
          name = velocityHoming
          description = """
Maximum velocity of trapezoipdal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = degree/s
        }
        {
          name = smoothingHoming
          description = """
Smoothing factor of trapezoidal profile for homing. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = softwareLimits
          description = "Software limits of the rorary stage. In the tracking mode, the positional demands that exceed this range will be rounded to equivalent angles within the software limit range. Otherwise, the positional demands will be ignored."
          type = array
          dimensions: [2]
          items = {
            type = float
          }
          units = degree
        }
        {
          name = supressSoftwareLimitAlarm
          description = "Indicates whether the alarm for the software limits is supressed. This configuration is useful to supress the alarm when an instrument specialist forcibly moves the rotary stage (using an engineering screen) over the software limit range for maintenance."
          type = boolean
          default = false
        }
        {
          name = temperatureThreshold
          description = "Temperature threashold for overheating protection."
          type = float
          units = K
        }
        {
          name = motorCurrent
          description = """
The motor current for this stage.

__TDB__: Define the range, or the possible values.
"""
          type = float
          units = A
        }
      ]
    }
    {
      name = xAxisConf
      description = """
Current configuration of the linear stage for X axis motion.

This telemetry can be used to check if the current configuration is as intended. If not, the user shoud edit the configuration via Configuration Service or a local file, and re-initialize this assembly so that the latest configuration will be reloaded. This telemetry is updated only when initialization is performed.

__TODO__: Add configuration of the model to compensate backlash and mechanical imperfections, and the parameters of the model. It is likely to be a simple inear equation. This equation should also include the conversion from the raw steps to the physical quantity.
"""
      maxRate = 1
      archive = true
      attributes = [
        {
          name = accuracy
          description = "Position accuracy required for the tracking motion."
          type = float
          units = mm
        }
        {
          name = offset
          description = """
Offset distance from the home switch to the 0 degree angle.

__TODO__: Define the range.
"""
          type = float
          units = mm
        }
        {
          name = insertedPosition
          description = """
Inserted position.

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = insertedPositionDelta
          description = """
Acceptable positioning deviation at the inserted position.

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = retractedPosition
          description = """
Retracted position.

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = retractedPositionDelta
          description = """
Acceptable positioning deviation at the retracted position.

__TODO__: Define maximum and minimum value.
"""
          type = float
          units = mm
        }
        {
          name = acceleration
          description = """
Acceleration of trapezoidal profile for normal motion (motion to move to the designated position, not the tracking motion) around the inserted position.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = deceleration
          description = """
Deceleration of trapezoidal profile for normal motion around the inserted position.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = velocity
          description = """
Maximum velocity of trapezoipdal profile for normal motion around the inserted position.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = smoothing
          description = """
Smoothing factor of trapezoidal profile for normal motion around the inserted position. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = accelerationHoming
          description = """
Acceleration of trapezoidal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = decelerationHoming
          description = """
Deceleration of trapezoidal profile for homoing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = velocityHoming
          description = """
Maximum velocity of trapezoipdal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = smoothingHoming
          description = """
Smoothing factor of trapezoidal profile for homing. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.

"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = accelerationInOut
          description = """
Acceleration of trapezoidal profile for insertion and retraction motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = decelerationInOut
          description = """
Deceleration of trapezoidal profile for insertion and retraction motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = velocityInOut
          description = """
Maximum velocity of trapezoipdal profile for insertion and retraction motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = smoothingInOut
          description = """
Smoothing factor of trapezoidal profile for insertion and retraction motion. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.

"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = softwareLimits
          description = "Software limits of the X linear stage. The position demands that exceed this range will be rejected."
          type = array
          dimensions: [2]
          items = {
            type = float
          }
          units = mm
        }
        {
          name = supressSoftwareLimitAlarm
          description = "Indicates whether the alarm for the software limits should be supressed. This configuration is useful to supress the alarm when an instrument specialist forcibly moves the linear stae in X axis (using an engineering screen) over the software limit range for maintenance."
          type = boolean
          default = false
        }
        {
          name = temperatureThreshold
          description = "Temperature threashold for overheating protection."
          type = float
          units = K
        }
        {
          name = motorCurrent
          description = """
The motor current for this stage.

__TDB__: Define the range, or the possible values.
"""
          type = float
          units = A
        }
      ]
    }
    {
      name = yAxisConf
      description = """
Current configuration of the linear stage for Y axis motion.

This telemetry can be used to check if the current configuration is as intended. If not, the user shoud edit the configuration via Configuration Service or a local file, and re-initialize this assembly so that the latest configuration will be reloaded. This telemetry is updated only when initialization is performed.

__TODO__: Add configuration of the model to compensate backlash and mechanical imperfections, and the parameters of the model. It is likely to be a simple inear equation. This equation should also include the conversion from the raw steps to the physical quantity.
"""
      maxRate = 1
      archive = true
      attributes = [
        {
          name = accuracy
          description = "Position accuracy required for the tracking motion."
          type = float
          units = mm
        }
        {
          name = offset
          description = """
Offset distance from the home switch to the 0 degree angle.

__TODO__: Define the range.
"""
          type = float
          units = mm
        }
        {
          name = acceleration
          description = """
Acceleration of trapezoidal profile for normal motion (motion to move to the designated position, not the tracing motion).

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = deceleration
          description = """
Deceleration of trapezoidal profile for normal motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = velocity
          description = """
Maximum velocity of trapezoipdal profile for normal motion.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = smoothing
          description = """
Smoothing factor of trapezoidal profile for normal motion. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = accelerationHoming
          description = """
Acceleration of trapezoidal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to accelerate to the top speed.
"""
          type = float
          units = mm/s/s
        }
        {
          name = decelerationHoming
          description = """
Deceleration of trapezoidal profile for homoing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.
"""
          type = float
          units = mm/s/s
        }
        {
          name = velocityHoming
          description = """
Maximum velocity of trapezoipdal profile for homing.

__TODO__: Define maximum and minimum value. Minimum value should be larger than meaningful value. Do not allow extremly low value which may lead to very very long time to decelerate to zero.

__TBD__: Don't we need to define base velocity (start/stop velocity)? Couldn't find equivalent parameter in [Manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf).
"""
          type = float
          units = mm/s
        }
        {
          name = smoothingHoming
          description = """
Smoothing factor of trapezoidal profile for homing. See 'Motion Smoothing' chapter in [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf) for more details. The argument of KS command corresponds to this factor. 0.25 means no smoothing, and 64 means the maximum smoothing.

__TODO__: Check if the type should be integer or float. According to [the manual of DMC-40x0](http://www.galilmotioncontrol.com/download/manual/man_40x0.pdf), this value is 'an integer from 0.25 to 64 and represents the amount of smoothing', but 0.25 is not an integer...

__TBD__: Maybe it would be useful to map this value to the range between 0 to 1 for simplicity.
"""
          type = float
          minimum = 0.25
          maximum = 64
        }
        {
          name = softwareLimits
          description = "Software limits of the Y linear stage. The position demands that exceed this range will be rejected."
          type = array
          dimensions: [2]
          items = {
            type = float
          }
          units = mm
        }
        {
          name = supressSoftwareLimitAlarm
          description = "Indicates whether the alarm for the software limits is supressed. This configuration is useful to supress the alarm when an instrument specialist forcibly moves the linear stage (using an engineering screen) over the software limit range for maintenance."
          type = boolean
          default = false
        }
        {
          name = temperatureThreshold
          description = "Temperature threashold for overheating protection."
          type = float
          units = K
        }
        {
          name = motorCurrent
          description = """
The motor current for this stage.

__TDB__: Define the range, or the possible values.
"""
          type = float
          units = A
        }
      ]
    }
  ]

  alarms = [
    {
      name = misstep
      description = """
Indicates a misstep of one (or more) of the stepper motors.

The actual scheme to detect missteps is TBD.

When this alarm happens, the operator is expected to acknowledges this alarm and perform “datum” again. If this alarm is repeated many times, it indicates severe damage of the mechanisms and the observer is expected to report this problem to an instrument specialist.

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = stall
      description = """
Indicates that one or more stages do not respond, and this assembly cannot do the job.

Note that the observer can ignore this alarm if she/he does not use the cold stop and is sure that the mask has been completely retracted, but shall report this problem to an instrument specialist. The communication failure between Galil HCD and the motion controller would also trigger this alarm.

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = comFailure
      description = """
This alarm indicates the lost communication with the underlying Galil HCD.

This alarm is NOT latched.
"""
      severity = minor
      archive = true
    }
    {
      name = unexpectedMotion
      description = """
This alarm is raised when Galil HCD reports any motion of stages, but this assembly does not expect it. This alarm is normally raised when Galil HCD is commanded not from the assembly, but from, for example, engineering GUI directly.

When this alarm happens, the observer is expected to execute ‘stop’ command if the on-going motion is not what the observer expects. 

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = inconsistentStatus
      description = """
This alarm is raised when the statuses reported by Galil HCD are inconsistent with what this assembly currently expects. For example, the home switch may be turned on for some reason even if the stage is not moving and the current position is very far from the home position. It shouldn’t happen, but if it happens, this alarm is raised.

When this alarm happens, the observer is expected to check the statuses of this assembly. The observer can ignore this alarm and continue their observation if they think this alarm is not severe, but it is expected that the observer reports this issue to the instrument specialist after their observation. The observer may want to stop their observation when she or he finds this assembly behaving weirdly after this alarm, or if this alarm is repeatedly raised.

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = softwareLimit
      description = """
This alarm is raised if the translated position demands calculated from the position demands in the event streams from TCS are not in the range defined by the software limits of the linear stage, or if the required rotational/translational velocity is faster than the maximum speed.

This alarm indicates an error in TCS, and the operator is expected to report it to the instrument and TCS experts.

This alarm is latched.
"""
      severity = minor
      archive = true
    }
    {
      name = hardwareLimit
      description = """
This alarm is activated when any of the stages hits a limit switch.

This alarm must not happen during an observation. If it does, this alarm shall be reported to an instrument expert.

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = trackingFailure
      description = """
This alarm is activated when a stage cannot keep tracking motion.

It may happen when the event streams from TCS are not delivered to this assembly at the prescribed rate, or before the deadline. It may also happen when Galil HCD or the motion controller do not respond as expected during the tracking motion.

If this alarm is continuously being raised, the observer or the operator may want to stop the current exposure. If this alarm does not last for a long time, the observer has an option to keep the current exposure and do not use the readouts taken during that time to create a science raw frame. Note that, even if the event streams are not delivered before the deadline, this assembly (or the underlying HCD) tries to keep the tracking motion extrapolating the previous positional demands. Thus, normally, the observers can ignore this alarm.

This alarm is NOT latched.
"""
      severity = minor
      archive = true
    }
    {
      name = overheating
      description = """
Whether the motion is prohibited due to overheating.

The observer is expected to check the temperature reading of the corresponding mechanism. Wait the temperature becomes lower than the threshold, or change the threshold if the temperature reading seems not indicate real temperature. It would happen when the temperature sensor comes off.

This alarm is latched.
"""
      severity = major
      archive = true
    }
  ]
}