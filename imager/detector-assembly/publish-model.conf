subsystem = IRIS
component = imager-detector-assembly

publish {
	telemetry = [
		{
			name = currentConfig
	    	description = """
Configuration of exposure (or a successive sequence of exposures) in progress or last completed.

__DISCUSSION__: How do we handle static configuration like detector reset level, non-linearity correction, etc. These configurations are not likely to be changed every observation, but determined at engineerin time (commissioning, maintenance, ...).

__DISCUSSION__: Check which parameters can be shared by all 4 detectors, and which parameters shold be set indenepdently for each detector.
"""
	    	minRate = 1
	    	maxRate = 1
	    	archive = true
	    	archiveRate = 1
	    	attributes = [
	    		{
	    			name = samplingMode
	    			description  = "Sampling mode."
	    			enum = [CDS, Fowler, UTR, TBD] 
	    			default = CDS
	    		}
	    		{
	    			name = pixelTime
	    			description  = "Time to select and read one pixel."
	    			type = float
	    			units = us
	    		}
	    		{
	    			name = channels
	    			description  = "Number of channels. The possible numbers are 1, 4, 16, 32, 64 (TBC)."
	    			type = integer
	    			minimum = 1
				maximum = 64
	    			units = channels
	    		}
	    		{
	    			name = frameTime
	    			description  = """Time to read the whole array for one readout.

__TBD__: Check if this is the same as the reset time.
__TBD__: Consider the impact of ODGW.
"""
	    			type = float
	    			units = us
	    		}
	    		{
	    			name = intergrationTime
	    			description  = "Integration time. In case of CDS and Fowler sampling, this integration time is the time between two groups."
	    			type = integer
	    			minimum = 0 
	    			units = ms
	    		}
	    		{
	    			name = resets
	    			description = "Number of resets in one ramp."
	    			type = integer
	    			minimum = 1
	    			default = 1
	    		}
	    		{
	    			name = groups
	    			description = """Number of groups in one ramp.

__DISCUSSION__: Do we need this parameter? This is fixed to 2 in case of CDS and Fowler sampling, and this value does not make sense for UTR.
"""
	    			type = integer
	    			minimum = 1
	    			default = 1
	    		}
	    		{
	    			name = reads
	    			description = "Number of reads in one group."
	    			type = integer
	    			minimum = 1
	    			default = 1
	    		}
	    		{
	    			name = coadds
	    			description = "Number of coadds in one exposure."
	    			type = integer
	    			minimum = 1
	    			default = 1
	    		}
	    		{
	    			name = repeats
	    			description = "Number of exposures repeatedly executed with the same configuration."
	    			type = integer
	    			minimum = 1
	    			default = 1
	    		}
	    		{
	    			name = subregion
	    			description = """
Subregion definition. First index specifies detector number (0 => #1, 1 => #2, 2 => #3, 3 => #4), the second index specifies either left-bottom-most point or right-top-most point (0 => left-bottom-most, 1 => right-top-most) and the third index specifies x or y (0 => x, 1 => y).

The diagram below shows the definition of index of this array attribute.

![Subregion definition](http://irisj-sde1.mtk.nao.ac.jp:8081/icddb_images.git/raw/master/imager/detector-assembly/subregion_definition.png)
"""
	    			type = array
	    			dimensions = [4,2,2]
	    			items = {
                                    type = integer
                                    minimum = 0
                                    maximum = 4095
                                }
	    			units = pixel
	    		}
	    		{
	    			name = versionDSP
	    			description = """Version number of downloaded DSP code in Leach controller.

__TBD__: We may need more attributes for other software components outside CSW scheme. We first need to identify what kind of software components would be reuiqred for detector control.
"""
	    			type = string
	    		}
	    		{
	    			name = versionDriver
	    			description = "Version number of Linux driver for Leach controller."
	    			type = string
	    		}
	    		{
	    			name = versionAPI
	    			description = "Version number of ARC API."
	    			type = string
	    		}
	    	]
    	}
    	{
			name = nextConfig
	    	description = "Configuration of next exposure to be taken"
	    	minRate = 1
	    	maxRate = 1
	    	archive = true
	    	archiveRate = 1
	    	attributes = [
	    		{
	    			name = samplingMode
	    			description  = "Sampling mode."
	    			enum = [CDS, Fowler, UTR, TBD] 
	    			default = CDS
	    		}
	    		{
	    			name = pixelTime
	    			description  = "Time to select and read one pixel."
	    			type = float
	    			units = us
	    		}
	    		{
	    			name = channels
	    			description  = "Number of channels. The possible numbers are 1, 4, 16, 32, 64 (TBC)."
	    			type = integer
	    			minimum = 1
				maximum = 64
	    			units = channels
	    		}
	    		{
	    			name = intergrationTime
	    			description  = """
Integration time. In case of CDS and Fowler sampling, this integration time is the time between two groups.

__DISCUSSION__: Is 'ms' fine enough?
"""
	    			type = integer
	    			minimum = 0 
	    			units = ms
	    		}
	    		{
	    			name = resets
	    			description = "Number of resets in one ramp."
	    			type = integer
	    			minimum = 1
	    			default = 1
	    		}
	    		{
	    			name = groups
	    			description = """Number of groups in one ramp.

__DISCUSSION__: Do we need this parameter? This is fixed to 2 in case of CDS and Fowler sampling, and this value does not make sense for the other type of sampling methods.
"""
	    			type = integer
	    			minimum = 1
	    			default = 1
	    		}
	    		{
	    			name = reads
	    			description = "Number of reads in one group."
	    			type = integer
	    			minimum = 1
	    			default = 1
	    		}
	    		{
	    			name = coadds
	    			description = "Number of coadds in one exposure."
	    			type = integer
	    			minimum = 1
	    			default = 1
	    		}
	    		{
	    			name = repeats
	    			description = "Number of exposures repeatedly executed with the same configuration."
	    			type = integer
	    			minimum = 1
	    			default = 1
	    		}
	    		{
	    			name = subregion
	    			description = """
Subregion definition. First index specifies detector number (0 => #1, 1 => #2, 2 => #3, 3 => #4), the second index specifies either left-bottom-most point or right-top-most point (0 => left-bottom-most, 1 => right-top-most) and the third index specifies x or y (0 => x, 1 => y).

The diagram below shows the definition of index of this array attribute.

![Subregion definition](http://irisj-sde1.mtk.nao.ac.jp:8081/icddb_images.git/raw/master/imager/detector-assembly/subregion_definition.png)
"""
	    			type = array
	    			dimensions = [4,2,2]
	    			items = {
                                    type = integer
                                    minimum = 0
                                    maximum = 4095
                                }
	    			units = pixel
	    		}
	    		{
	    			name = versionDSP
	    			description = """Version number of downloaded DSP code in Leach controller.

__TBD__: We may need more attributes for other software components outside CSW scheme. We first need to identify what kind of software components would be reuiqred for detector control.
"""
	    			type = string
	    		}
	    		{
	    			name = versionDriver
	    			description = "Version number of Linux driver for Leach controller."
	    			type = string
	    		}
	    		{
	    			name = versionAPI
	    			description = "Version number of ARC API."
	    			type = string
	    		}
	    	]
    	}
    	{
	    	name = referencePixelSubtraction
	    	description = "Status of reference pixel subtraction"
	    	minRate = 1
	    	maxRate = 1
	    	archive = true
	    	archiveRate = 1
	    	attributes = [
	    		{
	    			name = performed
	    			description  = "Flag for whether reference pixel subtraction is performed"
	    			type = boolean
	    			default = TRUE
	    		}
	    		{
	    			name = type
	    			description  = "Type of reference pixel subtraction performed"
	    			enum = [TBD1, TBD2, TBD3]
	    			default = TBD1
	    		}	    		
	    	]
	    }
	    {
	    	name = gain
	    	minRate = 1
	      	maxRate = 1
	    	archive = true
	    	archiveRate = 1
	    	attributes = [
	    		{
	    			name = gain
	    			description = "Convsersion of photoelectrons to counts for each detector."
	    			type = array
	    			dimensions = [4]
	    			items = {
                                    type = float
                                }
	    			units = e-/ADU
	    			
	    		}
	    	]
	    }	    
	    {
	    	name = status
	    	minRate = 1
	      	maxRate = 1
	    	archive = true
	    	archiveRate = 1
	    	attributes = [
	    		{
	    			name = status
	    			description = "Overall status of system:"
	    			type = string
	    			default = UNKNOWN
	    			
	    		}
	    		{
	    			name = statusDetail
	    			description = "Detailed status of system:"
	    			type = string
	    			default = UNKNOWN
	    			
	    		}
	    	]
	    }
	    {
	    	name = flags
	    	minRate = 1
	    	maxRate = 1
	    	archive = true
	    	archiveRate = 1
	    	attributes = [
	    		{
	    			name = isAborted
	    			description = "Flag for whether exposure in progress or last completed exposure has been aborted"
	    			type = boolean
	    			default = FALSE
	    		}
	    		{
	    			name = abortInProgress
	    			description = "Flag for whether exposure in progress is currently being aborted"
	    			type = boolean
	    			default = FALSE
	    		}
	    		{
	    			name = observationInProgress
	    			description = "Flag for whether an observation is in progress"
	    			type = boolean
	    			default = FALSE
	    		}
	    		{
	    			name = exposureInProgress
	    			description = "Flag for whether exposure is in progress"
	    			type = boolean
	    			default = FALSE
	    		}
	    	]
	    }
	    {
	    	name = counts
	    	minRate = 1
	    	maxRate = 1
	    	archive = true
	    	archiveRate = 1
	    	attributes = [
	    		{
	    			name = readsDone
	    			description = "Number of reads completed for exposure in progress or last completed"
	    			type = integer
	    			minimum = 0
	    			default = 0
	    		}
	    		{
	    			name = groups
	    			description = "Number of groups completed for exposure in progress or last completed"
	    			type = integer
	    			minimum = 0
	    			default = 0
	    		}
	    		{
	    			name = coaddsDone
	    			description = "Number of coadds completed for exposure in progress or last completed"
	    			type = integer
	    			minimum = 0
	    			default = 0
	    		}
	    		{
	    			name = repeatsDone
	    			description = "Number of exposure repeats completed for exposure in progress or last completed"
	    			type = integer
	    			minimum = 0
	    			default = 0
	    		}
	    	]
	    }
	    
  	]
}