subsystem = IRIS
component = imager-detector-assembly

publish {
    telemetry = [
        {
            name = currentConfig
            description = """
Configuration of exposure (or a successive sequence of exposures) in progress or last completed.

__DISCUSSION__: Check which parameters can be shared by all 4 detectors, and which parameters should be set independently for each detector. For example, do we want to set different number of reads per ramp?
"""
            maxRate = 1
            archive = true
            archiveRate = 1
            attributes = [
                {
                    name = obsId
                    description = "Observation ID given by ObserveConfigArg structure as stated in [TMT Software Detailed Design (TMT.SFT.TEC.15.002.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-49912/TMTSoftwareDesign-CSWPD_REL01.pdf)."
                    type = string
                }
                {
                    name = channels
                    description  = "Number of channels. The possible numbers are 1, 4, 16, 32, 64 (TBC)."
                    type = integer
                    minimum = 1
                    maximum = 64
                    default = 64
                    units = channels
                }
                {
                    name = frameTime
                    description  = """Time to read the whole array for one readout. This value is calculated from other configuration.

__TBD__: Consider the impact of ODGW.
"""
                    type = float
                    units = us
                }
                {
                    name = resets
                    description = "Number of resets in one ramp."
                    type = integer
                    minimum = 1
                    default = 1
                }
                {
                    name = reads
                    description = "Number of reads in one group."
                    type = integer
                    minimum = 1
                }
                {
                    name = ramps
                    description = "Number of ramps in one exposure."
                    type = integer
                    minimum = 1
                    default = 1
                }
                {
                    name = subregion
                    description = """
Subregion definition. First index specifies detector number (0 => #1, 1 => #2, 2 => #3, 3 => #4), the second index specifies either left-bottom-most point or right-top-most point (0 => left-bottom-most, 1 => right-top-most) and the third index specifies x or y (0 => x, 1 => y). The coordinate is 0-based.

The diagram below shows the definition of index of this array attribute.

![Subregion definition](http://irisj-sde1.mtk.nao.ac.jp:8081/icddb_images.git/raw/master/imager/detector-assembly/subregion_definition.png)
"""
                    type = array
                    dimensions = [4,2,2]
                    items = {
                        type = integer
                        minimum = 0
                        maximum = 4095
                    }
                    units = pixel
                }
            ]
        }
        {
            name = nextConfig
            description = "Configuration of next exposure to be taken"
            maxRate = 1
            archive = true
            archiveRate = 1
            attributes = [
                {
                    name = obsId
                    description = "Observation ID given by ObserveConfigArg structure as stated in [TMT Software Detailed Design (TMT.SFT.TEC.15.002.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-49912/TMTSoftwareDesign-CSWPD_REL01.pdf)."
                    type = string
                }
                {
                    name = channels
                    description  = "Number of channels. The possible numbers are 1, 4, 16, 32, 64 (TBC)."
                    type = integer
                    minimum = 1
                    maximum = 64
                    default = 64
                    units = channels
                }
                {
                    name = frameTime
                    description  = """Time to read the whole array for one readout. This value is calculated from other configuration.

__TBD__: Consider the impact of ODGW.
"""
                    type = float
                    units = us
                }
                {
                    name = resets
                    description = "Number of resets in one ramp."
                    type = integer
                    minimum = 1
                    default = 1
                }
                {
                    name = reads
                    description = "Number of reads in one group."
                    type = integer
                    minimum = 1
                }
                {
                    name = ramps
                    description = "Number of ramps in one exposure."
                    type = integer
                    minimum = 1
                    default = 1
                }
                {
                    name = subregion
                    description = """
Subregion definition. First index specifies detector number (0 => #1, 1 => #2, 2 => #3, 3 => #4), the second index specifies either left-bottom-most point or right-top-most point (0 => left-bottom-most, 1 => right-top-most) and the third index specifies x or y (0 => x, 1 => y). The coordinate is 0-based.

The diagram below shows the definition of index of this array attribute.

![Subregion definition](http://irisj-sde1.mtk.nao.ac.jp:8081/icddb_images.git/raw/master/imager/detector-assembly/subregion_definition.png)
"""
                    type = array
                    dimensions = [4,2,2]
                    items = {
                        type = integer
                        minimum = 0
                        maximum = 4095
                    }
                    units = pixel
                }
            ]
        }
        {
            name = staticConfig
            description = """
Static configuration which is rarely changed every exposure, but changed at engineering, commissioning or maintenance.

__TODO__: Need to list up static configuration, and determine which configuration should be shared among all detectors and which configuration should be set independently for each detector.

__TODO__: Need to list up software components used by detector system and define attribute for each.
"""
            maxRate = 1
            archive = true
            archiveRate = 1
            attributes = [
                {
                    name = pixelTime
                    description  = "Time to select and read one pixel."
                    type = float
                    units = us
                }
                {
                    name = resetLevel
                    description = "Reset level of each detector."
                    type = array
                    dimensions = [4]
                    items = {
                        type = float
                        units = TBD
                    }
                }
                {
                    name = versionDSP
                    description = "Version number of downloaded DSP code in Leach controller."
                    type = array
                    dimensions = [4]
                    items = {
                        type = string
                    }
                }
                {
                    name = versionDriver
                    description = "Version number of Linux driver for Leach controller."
                    type = string
                }
                {
                    name = versionAPI
                    description = "Version number of ARC API."
                    type = string
                }
            ]
        }
        {
            name = referencePixelSubtraction
            description = """
Status of reference pixel subtraction

__DISCUSSION__: Doesn't DRS peform reference pixel subtraction? If so, this telemetry is not required.
"""
            maxRate = 1
            archive = true
            archiveRate = 1
            attributes = [
                {
                    name = performed
                    description  = "Flag for whether reference pixel subtraction is performed"
                    type = boolean
                    default = TRUE
                }
                {
                    name = type
                    description  = "Type of reference pixel subtraction performed"
                    enum = [TBD1, TBD2, TBD3]
                    default = TBD1
                }                
            ]
        }
        {
            name = gain
            maxRate = 1
            archive = true
            archiveRate = 1
            attributes = [
                {
                    name = gain
                    description = "Convsersion of photoelectrons to counts for each detector."
                    type = array
                    dimensions = [4]
                    items = {
                        type = float
                    }
                    units = e-/ADU
                    
                }
            ]
        }        
        {
            name = status
            maxRate = 1
            archive = true
            archiveRate = 1
            attributes = [
                {
                    name = status
                    description = "Overall status of system."
                    type = string
                    default = UNKNOWN
                    
                }
                {
                    name = detectorStatus
                    description = """
Status of each detector.

* __OFF__      : The detector power is off.
* __BOOTING__  : Powering on the detector.
* __IDLING__   : The detector is idling.
* __EXPOSURE__ : The detector is taking an exposure.
* __SHUTDOWN__ : powering off the detector.
* __UKNOWN__   : Unknown state

"""
                    type = array
                    dimensions = [4]
                    items = {
                        enum = [OFF_LOCKED, OFF_UNLOCKED, BOOTING, IDLING, EXPOSURE, SHUTDOWN, UNKNOWN]
                        default = UNKNOWN
                    }
                }
            ]
        }
        {
            name = power
            description = "This telemetry tells if all 4 detectors are powered off and locked.  This telemetry will be used in Start Warming and Start Pumping use cases as mentioned in [IRIS Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx)."
            maxRate = 1
            archive = true
            archiveRate = 1
            attributes = [
                {
                    name = off
                    description = "This attribute becomes TRUE when all 4 detectors are powered off."
                    type = boolean
                    default = FALSE
                }
                {
                    name = locked
                    description = "This attribute becomes TRUE when all 4 detectors are locked."
                    type = boolean
                    default = FALSE
                }
            ]       
        }
        {
            name = flags
            maxRate = 1
            archive = true
            archiveRate = 1
            attributes = [
                {
                    name = isAborted
                    description = "Flag for whether exposure in progress or last completed exposure has been aborted"
                    type = boolean
                    default = FALSE
                }
                {
                    name = abortInProgress
                    description = "Flag for whether exposure in progress is currently being aborted"
                    type = boolean
                    default = FALSE
                }
                {
                    name = observationInProgress
                    description = """
Flag for whether an observation is in progress

__DISCUSSION__: Does this assembly need to care whether the observation is in progress or not?
"""
                    type = boolean
                    default = FALSE
                }
                {
                    name = exposureInProgress
                    description = "Flag for whether exposure is in progress. This flag becomes true when exposure of any of 4 detectors is in progress."
                    type = boolean
                    default = FALSE
                }
            ]
        }
        {
            name = counts
            description = "Number of reads and ramps completed for exposure in progress or last completed per each detector."
            maxRate = 1
            archive = true
            archiveRate = 1
            attributes = [
                {
                    name = reads
                    description = "Number of reads completed for ramp in progress or last completed."
                    type = array
                    dimensions = [4]
                    items = {
                        type = integer
                        minimum = 0
                        default = 0
                    }
                }
                {
                    name = ramps
                    description = "Number of ramps completed for exposure in progress or last completed."
                    type = array
                    dimensions = [4]
                    items = {
                        type = integer
                        minimum = 0
                        default = 0
                    }
                }
                {
                    name = exposures
                    description = "Number of exposures completed for observation in progress or last completed."
                    type = array
                    dimensions = [4]
                    items = {
                        type = integer
                        minimum = 0
                        default = 0
                    }
                }
            ]
        }
        ]
    events = [
        {
            name = startExposure
            description = "This event notifies that a new exposure started."
            archive = true
            attributes = [
                {
                    name = exposure
                    description = "Exposure # within the observation."
                    type = integer
                    minimum = 0
                }
                {
                    name = obsId
                    description = "Observation ID which the current exposure belongs to."
                    type = string
                    minimum = 0
                }
            ]
        }
        {
            name = readoutCompleted
            description = "This event notifies that one readout is saved to DSK-DRS so that DRS can start processing the readout on the disk."
            archive = true
            attributes = [
                {
                    name = detector
                    description = "Detector # from which the readout is generated."
                    type = integer
                    minimum = 1
                    maximum = 4
                }
                {
                    name = read
                    description = "Read # of the readout."
                    type = integer
                    minimum = 0
                }
                {
                    name = ramp
                    description = "Ramp # which the readout belongs to."
                    type = integer
                    minimum = 0
                }
                {
                    name = exposure
                    description = "Exposure # which the ramp belongs to."
                    type = integer
                    minimum = 0
                }
                {
                    name = obsId
                    description = "Observation ID which the exposure belongs to."
                    type = string
                }
            ]
        }
        {
            name = endExposure
            description = "This event notifies that an exposure is finished."
            archive = true
            attributes = [
                {
                    name = exposure
                    description = "Exposure # within the observation."
                    type = integer
                    minimum = 0
                }
                {
                    name = obsId
                    description = "Observation ID which the current exposure belongs to."
                    type = string
                    minimum = 0
                }
            ]
        }
        {
            name = aborting
            description = "This event notifies that this assembly starts to try aborting the current exposure. When the abort is completed, the corresponding 'aborted' event will be sent. If the exposure successfully finishes before aborting, 'endExposure' event will be sent."
            archive = true
            attributes = [
                {
                    name = exposure
                    description = "Exposure # of the exposure to be aborted."
                    type = integer
                    minimum = 0
                }
                {
                    name = obsId
                    description = "Observation ID which the current exposure belongs to."
                    type = string
                    minimum = 0
                }
            ]
        }
        {
            name = aborted
            description = "This event notifies that the current exposure was aborted."
            archive = true
            attributes = [
                {
                    name = exposure
                    description = "Exposure # of the aborted exposure."
                    type = integer
                    minimum = 0
                }
                {
                    name = obsId
                    description = "Observation ID which the current exposure belongs to."
                    type = string
                    minimum = 0
                }
            ]
        }
    ]
}