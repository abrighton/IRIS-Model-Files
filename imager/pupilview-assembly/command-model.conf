subsystem = IRIS
component = imager.pupilview

description = """
Commands which can be accepted by IRIS Pupil Viewing Mode Assembly.

This command model is designed based on [Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.DRF01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_DRF01_b.docx). As proposed by the design pattern, standard assembly commands and assembly-specific commands are provided for each functional group. All commands are classified into either 'request' or 'submit' based on the command type defintion described in the design pattern document.
"""

receive = [
    {
        name = DETECTOR_INIT
        description = """
This command causes the assembly to initialize its variables, read configuration, and verify dependencies.  It prepares the assembly internally such that it is available to communicate with outside processes and begin managing the detectors.  It does not cause any readout or reset on the detector, but it validates the connections and hardware presence before completing. It also applies the detector configurations DETECTOR_CONF( (e.g. gain, number of channels) to each detector. Programs and configurations (e.g. this could be DSP code in the case of ARC controller) may be downloaded to the detector controllers if necessary.

This command can be invoked only when there is no exposure in progress. All commands will be rejected during the initialization.

Initialization can fail for various reasons including HCD communication failure, hardware failure, or invalid configuration. In this case, the command state will report an error.

Command type: request
"""
    }
    {
        name = MIRROR_INIT
        description = """
This command causes MIRROR functional group to initialize its variables, read configuration, and verify dependencies.  It prepares this functional group internally such that it is available to communicate with outside processes and begin managing the fold mirror stage. It does not cause any motion or initiate any action on the hardware but, it validates the connections and hardware presence before completing. It may also initialize per-axis configuration of the underlying Galil HCD.

This command can be invoked only when the mirror stage is not in motion. All commands will be rejected during the initialization.

Initialization can fail for various reasons including HCD communications failure, hardware failure, or invalid configurations.  In this case, the command state will report an error.

Command type: request
"""
    }
    {
        name = MOUNT_INIT
        description = """
This command causes MOUNT functional group to initialize its variables, read configuration, and verify dependencies.  It prepares this functional group internally such that it is available to communicate with outside processes and begin managing the detector mount stage. It does not cause any motion or initiate any action on the hardware but, it validates the connections and hardware presence before completing. It may also initialize per-axis configuration of the underlying Galil HCD.

This command can be invoked only when the detector mount stage is not in motion. All commands will be rejected during the initialization.

Initialization can fail for various reasons including HCD communications failure, hardware failure, or invalid configurations.  In this case, the command state will report an error.

Command type: request
"""
    }
    {
        name = DETECTOR_TEST
        description = """
This command executes a self-test. Actual action to be taken is TBD.

This command never starts an exposure nor reset the detector.

This command can be invoked only when there is no exposure in progress. All commands will be rejected during the test.

Command type: request
"""
    }
    {
        name = MIRROR_TEST
        description = """
This command executes a self-test.  Actual action to be taken is TBD.

This command never drives the mirror stage.

This command can be invoked only when the mirror stage is in motion. All commands will be rejected during the test.

Command type: request
"""
    }
    {
        name = MOUNT_TEST
        description = """
This command executes a self-test.  Actual action to be taken is TBD.

This command never drives the detector mount stage.

This command can be invoked only when the detector mount stage is in motion. All commands will be rejected during the test.

Command type: request
"""
    }
    {
        name = DETECTOR_DATUM
        description = """
This command turns on the power of the detector if it is not on (TBC).

Command type: request
"""
    }
    {
        name = MIRROR_DATUM
        description = """
Perform homing of the mirror stage and reset the stepper motor counter to accurately and precisely position the stages. 

This command can be invoked only when the mirror stage is not in motion. All commands except "MIRROR_stop"  will be rejected during the datum.

In the event of an error or failure to index, datum will return an error response, the command state will be set to error, and the movement state will be un-indexed.  The position will report as unknown.

Command type: submit
"""
    }
    {
        name = MOUNT_DATUM
        description = """
Perform homing of the detector mount stage and reset the stepper motor counter to accurately and precisely position the stages.

This command can be invoked only when the detector mount stage is not in motion. All commands except "MOUNT_stop" will be rejected during the datu

In the event of an error or failure to index, datum will return an error response, the command state will be set to error, and the movement state will be un-indexed.  The position will report as unknown.

Command type: request
"""
    }
    {
        name = DETECTOR_LOAD_CONFIGURATION
        description = """
This command validates the specified exposure configuration, and save them internally in this Assembly, the underlying PV Detector HCD and/or the detector controller so that the next exposure will be done with the specified configuration.

__TODO__: Identify what configuration shall be set by this command, and add them as the arguments of this command.

Command type: request
"""
        requiredArgs = [exposureTime]
        args = [
            {
                name = exposureTime
                description = "exposure time"
                type = float
                units = s
            }
        ]
    }
    {
        name = DETECTOR_START_EXPOSURE
        description = """
This command starts a new exposure with the pre-loaded configuration.

Command type: submit
"""
        requiredArgs = [filename]
        args = [
            {
                name = filename
                description = "FITS file name of this exposure"
                type = string
            }
        ]
    }
    {
        name = DETECTOR_ABORT_EXPOSURE
        description = """
This command aborts the current exposure in progress.

Command type: submit
"""
    }
    {
        name = MIRROR_SELECT
        description = """
This command inserts or retracts the fold mirror into/from the science light path.

This command can be invoked only when the mirror stage is not in motion. All commands except "MIRROR_stop" will be rejected during the execution of this command.

Command type: submit
"""
        requiredArgs = [position]
        args = [
            {
                name = position
                description = "Desired position of the fold mirror."
                enum = [IN, OUT]
            }
        ]
    }
    {
        name = MOUNT_MOVE
        description = """
This command moves the detector mount stage to the specified position.

This command can be invoked only when the detector mount stage is not in motion. All commands except "MOUNT_stop" will be rejected during the execution of this command.

Command type: submit
"""
        requiredArgs = [position]
        args = [
            {
                name = position
                description = "Desired position of the detector mount."
                type = float
                units = mm
            }
        ]
    }
    {
        name = DETECTOR_LOCK
        description = """
This command locks this functional group.  Any commands that turn on the power or trigger a new exposure will be rejected when locked.

This command is expected to be called before starting the cool-down or warm-up procedure.

Command type: request
"""
    }
    {
        name = MIRROR_LOCK
        description = """
This command locks this functional group. The commands that trigger any motion will be rejected when locked.

This command is expected to be called before starting the cool-down or warm-up procedure.

Command type: request
"""
    }
    {
        name = MOUNT_LOCK
        description = """
This command locks this functional group. The commands that trigger any motion will be rejected when locked.

This command is expected to be called before starting the cool-down or warm-up procedure.

Command type: request
"""
    }
    {
        name = DETECTOR_UNLOCK
        description = """
This command unlocks this functional group.

This command is expected to be called after the cool-down or warm-up procedure is completed.

Command type: request
"""
    }
    {
        name = MIRROR_UNLOCK
        description = """
This command unlocks this functional group.

This command is expected to be called after the cool-down or warm-up procedure is completed.

Command type: request
"""
    }
    {
        name = MOUNT_UNLOCK
        description = """
This command unlocks this functional group.

This command is expected to be called after the cool-down or warm-up procedure is completed.

Command type: request
"""
    }
    {
        name = DETECTOR_PARK
        description = """
This command cancels the exposure in progress, and turns off the detector (TBC).

Command type: submit
"""
    }
    {
        name = MIRROR_PARK
        description = """
This command basically does nothing, or move the mirror to the most commonly used position (e.g. inserted position).

Command type: submit
"""
    }
    {
        name = MOUNT_PARK
        description = """
No-op.

Command type: submit
"""
    }
    {
        name = MIRROR_STOP
        description = """
Stop the motion of the mirror stage.

Command type: submit
"""
    }
    {
        name = MOUNT_STOP
        description = """
Stop the motion of the detector mount stage.

Command type: submit
"""
    }
    {
        name = DETECTOR_DEBUG
        description = """
This will set the current debug level.  This is for debugging purposes and allows the user to change the level of logging for debugging purposes.

Command type: request
"""
    }
    {
        name = MIRROR_DEBUG
        description = """
This will set the current debug level.  This is for debugging purposes and allows the user to change the level of logging for debugging purposes.

Command type: request
"""
    }
    {
        name = MOUNT_DEBUG
        description = """
This will set the current debug level.  This is for debugging purposes and allows the user to change the level of logging for debugging purposes.

Command type: request
"""
    }
    {
        name = SHUTDOWN
        description = """
Stop this assembly running. This will cause all of the software to exit. It does not send this command down to the underlying HCDs. If currently shutting down, all other commands will be rejected.

Command type: request
"""
    }
]
