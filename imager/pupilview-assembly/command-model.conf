subsystem = IRIS
component = pupilview-assembly

description = """
Commands which can be accepted by IRIS Pupil Viewing Assembly.

Commands will be rejected immediately when the assembly is not in an appropriate state.

This command model is intended to list up possible commands reuqired to perform testing, engineering, observation configuration and observation. Main purpose of this command model is to smoke out information about what kind of instructions would be made by a person (it may be an engineer, an instrument specialist or an observer) for all use cases, not just for observation. Thus, most of the commands are very low level. In the future, a high level set-up command for observation would be defined to more or less autonomously perform observation instead of issuing low level commands one by one.

All the commands do NOT block the caller, but they are executed asynchronously. The response to each command will be sent back to the caller after some time. This time would be ranging from very short time (millisecond order or even less) to very long time (several seconds or a bit more). In principle, the response will be sent back when the specified action is completed, but the response may be sent back immediately if the command is invalid (e.g. sending MOVE command before datuming is completed) or invalid argument is given.

There is no command queues in an Assembly component as described in [TMT Software Detailed Design (CSW) (TMT.SFT.TEC.15.002.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-49912/TMTSoftwareDesign-CSWPD_REL01.pdf). Only one command can be processed at a time, and commands will not be pooled in a queue for later processing. If a command (except 'stop' command) is sent to this assembly while it is processing a previous command, this assembly will immediately return an error response which indicates another action is on-going. Note that this command queue issue depens on future CSW implementation.
"""

receive = [
    {
        name = INITIALIZE
        description = """
This command loads the configuration of this assembly from Configuration Service or a local file ( __TBD__ ). It is accepted only when this assembly is in Init:Loaded state. After successful completion of this command execution, this assembly will be staged in Init:Initialized state. If it fails, this assembly will stay in Init:Loaded state.

This command never rotates any axis, take an exposure, nor does it trigger the communication with underlying HCDs.

This command corresponds to 'initialize' message as defined in [OSW TN013 - Component Lifecycle Design and Implementation (TMT.SFT.TEC.15.006.REL04)](https://docushare.tmt.org/docushare/dsweb/Get/Document-46346/OSW%20TN013-ComponentLifecycleDesign_REL04.pdf).

__TBD__: identify what configuration to be loaded
"""
    }
    {
        name = UNINITIALIZE
        description = """
This command stages this assembly in Init:Loaded state from Init:Initialized so that the initialization can be performed again after the configuration is changed. It does nothing other than that. If it fails, this assembly will stay in Init:Initialized state.

This command never rotates any axis, take exposure, power on the detector, nor does it trigger the communication with underlying HCDs.

This command corresponds to 'uninitialize' message as defined in [OSW TN013 - Component Lifecycle Design and Implementation (TMT.SFT.TEC.15.006.REL04)](https://docushare.tmt.org/docushare/dsweb/Get/Document-46346/OSW%20TN013-ComponentLifecycleDesign_REL04.pdf).
"""
    }
    {
        name = STARTUP
        description = """
This command establishes connection to relevant all underlying HCDs, and turns on the motion controller if it is off. It is accepted only when this assembly is in Init:Initialized state. After successful completion of this command execution, this assembly will be staged in Init:Running state. If it fails, this assembly will stay in Init:Initialized state.

This command never rotates any axis, take an exposure, nor does it power on the detector, but it excites the motors to hold the current positions of all axes, so it may affect the thermal condition inside the dewar.. If any motion is on-going, it is interrupted and stopped.

This command corresponds to 'startup' message as defined in [OSW TN013 - Component Lifecycle Design and Implementation (TMT.SFT.TEC.15.006.REL04)](https://docushare.tmt.org/docushare/dsweb/Get/Document-46346/OSW%20TN013-ComponentLifecycleDesign_REL04.pdf)
"""
    }
    {
        name = SHUTDOWN
        description = """
This command cancels the on-going movement and stage this assembly in Init:Initialized after the command execution succeeds. It is accepted in whatever states except Init:* states (but including Init:Running state). It does NOT turn off the motion controller.

The failure of this command execution will stage this assembly in a certain state depending the context. For example, if this command is executed during parking and this assembly fails to stop any axis for some reason, it is staged in Parking:Error state. It never turns off the motion controller.

This command corresponds to 'shutdown' message as defined in [OSW TN013 - Component Lifecycle Design and Implementation (TMT.SFT.TEC.15.006.REL04)](https://docushare.tmt.org/docushare/dsweb/Get/Document-46346/OSW%20TN013-ComponentLifecycleDesign_REL04.pdf).
"""
    }
    {
        name = DATUM
        description = """
This command triggers datuming.

Homing for the axis of the pick-off mirror will be performed first, and then the pick-off mirror will be retructed from the science light path.

__TBD__: Actions to be taken by the detector is TBD.
"""
    }
    {
        name = LOCK
        description = """
This command will be used in Warm Stow use case as mentioned in [IRIS Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx).

__TBD__: Actual actions to be taken is TBD.
"""
    }
    {
        name = UNLOCK
        description = """
This command will be used in Activate and Warm Activate use cases as mentioned in [IRIS Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx).

__TBD__: Actual actoins to be taken is TBD.
"""
    }
    {
        name = START_EXPOSURE
        description = """
This command starts a new exposure with the given cofinguration.

__TODO__: Define arguments.
"""
    }
    {
        name = ABORT_EXPOSURE
        description = "This command aborts the current exposure."
    }
    {
        name = POWER_ON
        description = "This command turns on power of the pupil viewing detector. This command will be used in Warm Stow use case as mentioned in [IRIS Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx)."
    }
    {
        name = POWER_OFF
        description = "This command turns off power of the pupil viewing detector. This command will be used in Activate and Warm Activate use cases as mentioned in [IRIS Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx)."
    }
    {
        name = MOVE
        description = "This command inserts or retructs the pick-off mirror into/from the science light path."
        requiredArgs = [position]
        args = [
            {
                name = position
                description = "Desired position of the pick-off mirror."
                enum = [INSERTED, RETRUCTED]
            }
        ]
    }
    {
        name = PARK
        description = """
This command is supposed to be called at the end of each night.

__TBD__: Actual actions to be taken is TBD.
"""
    }
    {
        name = STOP
        description = "This command stops all on-going motion of the pick-off mirror and exposure."
    }
    {
        name = SOFT_RESET
        description = "__TBD__: Actual actions to be taken is TBD."
    }
    {
        name = HARD_RESET
        description = "__TBD__: Actual actions to be taken is TBD."
    }
    {
        name = SOFT_SHUTDOWN
        description = "__TBD__: Actual actions to be taken is TBD."
    }
    {
        name = HARD_SHUTDOWN
        description = "__TBD__: Actual actions to be taken is TBD."
    }
]
