subsystem = IRIS
component = pupilview-assembly

publish {

  description = "Telemetries published by IRIS Pupil Viewing Assembly."

  telemetry = [
    {
      name = pickoff
      description = """
Status of pickoff mirror.
"""
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
          name = position
          description = "Current position of the pick-off mirror."
          enum = [INSERTED, RETRACTED, INTERMEDIATE, UNKNOWN]
          default = UNKNOWN
        }
      ]       
    }
    {
      name = MIRROR_state
      description = "Standard assembly state as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = cmd
            description  = "command state"
            enum = [UNINITIALIZED, READY, BUSY, COTINUOUS]
        }
        {
            name = move
            description  = "state of mechanisms that can move"
            enum = [UNINDEXED, INDEXING, INDEXED, MOVING]
        }
        {
            name = onTarget
            description  = "state of mechanisms with respect to requested target position / configuration"
            type = boolean
        }
        {
            name = debug
            description  = "debug level"
            enum = [TBD]
        }
      ]
    }
    {
      name = MIRROR_cmdState
      description = "Standard assembly command status as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = command
            description  = "Name of the most recent command."
            type = string
        }
        {
            name = args
            description  = "String representation of the command arguments."
            type = string
        }
        {
            name = caller
            description  = "String identifying the caller (if available)"
            type = string
        }
        {
            name = runID
            description  = "A run ID associated with the command."
            type = integer
        }
        {
            name = ack
            description  = "Initial acknowledgement"
            enum = [ACCEPTED, REJECTED]
        }
        {
            name = ackMsg
            description  = "Acknowledgement string explaining why a command is REJECTED. This string will generally be cleared if the command is ACCEPTED."
            type = string
        }
        {
            name = completion
            description  = "Status of completion"
            enum = [INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED]
        }
        {
            name = completionMsg
            description  = "The message string is cleared when a command has been successfully acknowledged and/or is INPROGRESS. The message string is filled in if the command fails."
            type = string
        }
      ]
    }
    {
      name = MIRROR_temperatureInterlock
      description = """Whether the motion is prohibited due to overheating."""
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = state
            description  = "Whether the motion of the mirror stage is prohibited due to overheating."
            type = boolean
        }
      ]
    }
    {
      name = detector
      description = """
__TODO__: Telemetries for the detector and its configuration will be defined later. This is a placeholder for that.
"""
      attributes = [
        {
          name = dummy
          description = "dummy attribute"
          type = integer
        }
      ]
    }
  ]
}
