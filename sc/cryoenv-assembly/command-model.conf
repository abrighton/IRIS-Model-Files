subsystem = IRIS
component = sc.cryoenv

description = "IRIS Cryostat Environment Assembly Commands."

receive = [
	{
		name 			= IMG_select
		description 	="Set current thermal-vacuum state for IMG functional group."
		args 			= [
	    	{
		    	name 		= thermal_vacuum_state
		    	description = "Current thermal-vacuum state."
		    	enum        = [WARM, PUMPING, WARM_VACUUM, COOLING, COLD, WARMING, PRESSURIZING]
	    	}
		]
	}
	{
	    name 			= IMG_setTemp
	    description 	= "Sets target temperature for heater assigned to IMG functional group."
	    args 			= [
	    	{
		    	name 		= targetTemperature
		    	description = "The target temperature for the output"
	    	}
		]
	}
	{
		name 			= IMG_init
		description 	="""
		Load configuration file for IMG functional group and validate it. Set default values that are not state-specific 
		(monitor rate, logging rate, sensor location, logging information, etc.). Once connection to the HCDs are established, 
		immediately start the periodic monitoring and select temporary thermal-vacuum state based on the current reading.
		 At the same time, assembly flags user to select proper thermal-vacuum state.
		"""
	}
	{
		name 			= IMG_test
		description 	="Execute a self-test. This command will verify connection to the HCDs and health of the Lakeshore devices and its heaters and sensors. "
	}
	{
		name 			= IMG_config
		description 	="Re-load the configuration file for IMG functional group, but do not set any values."
	}
	{
		name 			= IMG_debug
		description 	="Change logging levels for this component only. This is purely for debugging purposes."
		args 			= [
	    	{
		    	name 		= loglevel
		    	description = "Log level to set."
		    	enum        = [TBD1, TBD2, TBD3, TBD4, TBD5]
	    	}
		]
	}
	{
		name 			= IFS_select
		description 	="Set current thermal-vacuum state for IFS functional group."
		args 			= [
	    	{
		    	name 		= thermal_vacuum_state
		    	description = "Current thermal-vacuum state."
		    	enum        = [WARM, PUMPING, WARM_VACUUM, COOLING, COLD, WARMING, PRESSURIZING]
	    	}
		]
	}
	{
	    name 			= IFS_setTemp
	    description 	= "Sets target temperature for heater assigned to IFS functional group."
	    args 			= [
	    	{
		    	name 		= targetTemperature
		    	description = "The target temperature for the output"
	    	}
		]
	}
	{
		name 			= IFS_init
		description 	="""
		Load configuration file for IFS functional group and validate it. Set default values that are not state-specific 
		(monitor rate, logging rate, sensor location, logging information, etc.). Once connection to the HCDs are established, 
		immediately start the periodic monitoring and select temporary thermal-vacuum state based on the current reading.
		 At the same time, assembly flags user to select proper thermal-vacuum state.
		"""
	}
	{
		name 			= IFS_test
		description 	="Execute a self-test. This command will verify connection to the HCDs and health of the Lakeshore devices and its heaters and sensors. "
	}
	{
		name 			= IFS_config
		description 	="Re-load the configuration file for IFS functional group, but do not set any values."
	}
	{
		name 			= IFS_debug
		description 	="Change logging levels for this component only. This is purely for debugging purposes."
		args 			= [
	    	{
		    	name 		= loglevel
		    	description = "Log level to set."
		    	enum        = [TBD1, TBD2, TBD3, TBD4, TBD5]
	    	}
		]
	}
	{
		name 			= PV_select
		description 	="Set current thermal-vacuum state for PV functional group."
		args 			= [
	    	{
		    	name 		= thermal_vacuum_state
		    	description = "Current thermal-vacuum state."
		    	enum        = [WARM, PUMPING, WARM_VACUUM, COOLING, COLD, WARMING, PRESSURIZING]
	    	}
		]
	}
	{
	    name 			= PV_setTemp
	    description 	= "Sets target temperature for heater assigned to PV functional group."
	    args 			= [
	    	{
		    	name 		= targetTemperature
		    	description = "The target temperature for the output"
	    	}
		]
	}
	{
		name 			= PV_init
		description 	="""
		Load configuration file for PV functional group and validate it. Set default values that are not state-specific 
		(monitor rate, logging rate, sensor location, logging information, etc.). Once connection to the HCDs are established, 
		immediately start the periodic monitoring and select temporary thermal-vacuum state based on the current reading.
		 At the same time, assembly flags user to select proper thermal-vacuum state.
		"""
	}
	{
		name 			= PV_test
		description 	="Execute a self-test. This command will verify connection to the HCDs and health of the Lakeshore devices and its heaters and sensors. "
	}
	{
		name 			= PV_config
		description 	="Re-load the configuration file for PV functional group, but do not set any values."
	}
	{
		name 			= PV_debug
		description 	="Change logging levels for this component only. This is purely for debugging purposes."
		args 			= [
	    	{
		    	name 		= loglevel
		    	description = "Log level to set."
		    	enum        = [TBD1, TBD2, TBD3, TBD4, TBD5]
	    	}
		]
	}
	{
		name 			= WIN_select
		description 	="Select current interface state with OIWFS and set values for monitoring parameters accordingly from the configuration file. Such values include: minimum temperature, maximum temperature, etc."
		args 			= [
	    	{
		    	name 		= interface_status
		    	description = "Current interface state with OIWFS"
		    	enum        = [ATTACHED, DETACHED]
	    	}
		]
	}
	{
	    name 			= WIN_setTemp
	    description 	= "Sets target temperature for heater assigned to WIN functional group."
	    args 			= [
	    	{
		    	name 		= targetTemperature
		    	description = "The target temperature for the output"
	    	}
		]
	}
	{
		name 			= WIN_init
		description 	="""
		Load configuration file for WIN functional group and validate it. Set default values that are not state-specific 
		(monitor rate, logging rate, sensor location, logging information, etc.). Once connection to the HCDs are established, 
		immediately start the periodic monitoring and temperature control based on subscribed surrounding temperature.
		"""
	}
	{
		name 			= WIN_test
		description 	="Execute a self-test. This command will verify connection to the HCDs and health of the Lakeshore devices and its heaters and sensors. "
	}
	{
		name 			= WIN_config
		description 	="Re-load the configuration file for WIN functional group, but do not set any values."
	}
	{
		name 			= WIN_debug
		description 	="Change logging levels for this component only. This is purely for debugging purposes."
		args 			= [
	    	{
		    	name 		= loglevel
		    	description = "Log level to set."
		    	enum        = [TBD1, TBD2, TBD3, TBD4, TBD5]
	    	}
		]
	}
	{
		name 			= PRESS_select
		description 	="Set current thermal-vacuum state for Pressure functional group."
		args 			= [
	    	{
		    	name 		= thermal_vacuum_state
		    	description = "Current thermal-vacuum state."
		    	enum        = [WARM, PUMPING, WARM_VACUUM, COOLING, COLD, WARMING, PRESSURIZING]
	    	}
		]
	}
	{
		name 			= PRESS_init
		description 	="""
		Load configuration file for PV functional group and validate it. Set default values that are not state-specific 
		(monitor rate, logging rate, sensor location, logging information, etc.). Once connection to the HCDs are established, 
		immediately start the periodic monitoring and select temporary thermal-vacuum state based on the current reading. 
		At the same time, assembly flags user to select proper thermal-vacuum state.
		"""
	}
	{
		name 			= PRESS_test
		description 	="Execute a self-test. This command will verify connection to the HCDs and health of the Lakeshore devices and its heaters and sensors. "
	}
	{
		name 			= PRESS_config
		description 	="Re-load the configuration file for IMG functional group, but do not set any values."
	}
	{
		name 			= PRESS_debug
		description 	="Change logging levels for this component only. This is purely for debugging purposes."
		args 			= [
	    	{
		    	name 		= loglevel
		    	description = "Log level to set."
		    	enum        = [TBD1, TBD2, TBD3, TBD4, TBD5]
	    	}
		]
	}
	{
		name 			= shutdown
		description 	="Stop this assembly running. This will cause all of the software to exit. It does not send this command down to the underlying HCDs. If currently shutting down, all other commands will be rejected."
	}
]
    